Job user is milias and his job asap3 has assigned ID 8950203
This job was submitted from the computer space06.hydra.local
and from the home directory:
/lustre/home/user/m/milias/work/projects/open-collection/theoretical_chemistry/software/asap3-ase/buildup_on_servers/jinr_ru/hydra_jinr_ru/try_tests

It is running on the cluster compute node:
gvr
and is employing 1 node/nodes:
n02p004

Job partition is cascade 

The job requests 4 CPU per task.
modules at disposal:

-------------- /cvmfs/hybrilit.jinr.ru/sw/slc7_x86-64/modulefiles --------------
ABINIT/v10.0.3_openmpi411             Ginac/v1.7.3-1
ABINIT/v10.0.7_openmpi411             GMP/v6.2.1_gcc1120
ABINIT/v9.10.3_openmpi411             GROMACS/v2019.3
AmberTools/v22                        GROMACS/v2024.3
AMS/v2021.107_intel                   GROMACS/v5.1.3_gcc485_cuda80
AMS/v2021.107_openmpi                 GSL/v1.16-1
BASE/1.0                              GSL/v2.6
CLN/v1.3.4-1                          GVR/v1.0-1
CMake/v3.29.2                         intel/oneapi
COMSOL/v6.2                           intel/v2018.1.163-9
cuda/v10.0-1                          intel/v2019.3.199
cuda/v10.1-1                          intel/v2021.1
cuda/v11.4                            intel-qs/v20-07-14
cuda/v12.1                            intel-qs/v21-01-14
cuda/v8.0-1                           JAM/v1.90596
cuda/v9.2                             java/v8u181
DIRAC/v19.0_intel2018                 java/v8u91-1
dssp/v2.3.0                           LAMMPS/v12.12.18
ELPA/v2020.05.001_intel2018_python365 LAPACK/v3.12.0_gcc1230
EMACS/v25.3                           LAPACK/v3.9.0
EOS/v1.0                              libpqxx/v7.0_gcc910
FairRoot/oct17p1                      MAGMA/v2.6.1_gcc830_cuda101
FairRoot/v16.06_gcc485                Maple/v2020.2
FairRoot/v18.0.4                      Mathematica/v11.2-1
FairRoot/v18.2.0_gcc485               MATLAB/R2020b
FairRoot/v18.2.1_gcc485               MATLAB/R2022b
FairRoot/v18.4.2_gcc1120              mpich/v4.1.2_gcc1120
FairSoft/apr21patches_gcc1120         ndm-lite/v1.0
FairSoft/june19p1_gcc485              opencv/v4.1.0
FairSoft/june19p2_gcc485              openmpi/v1.8.8-1
FairSoft/may16p1_gcc485               openmpi/v2.1.2-2
FairSoft/may18p1                      openmpi/v3.1.2
FairSoft/oct17p1                      openmpi/v3.1.3
fftw/v3.3.10_gcc1120                  openmpi/v3.1.3_psm2
fftw/v3.3.7-2                         openmpi/v4.1.1_gcc1120
fftw/v3.3.7-5                         openmpi/v4.1.6_gcc1230
FLAIR/v2.3.0                          openmpi/v5.0.3_gcc1230
FLUKA/v2011.2x-8                      ORCA/v5.0.1
FLUKA/v2020.0.3                       ORCA/v6.0.0
FLUKA/v2021.2.2                       PandaRoot/dec17p2b
FLUKA/v2021.2.9                       PandaRoot/may19
FLUKA/v2023.3.2                       PostgreSQL/v12.1_gcc910
FLUKA/v2023.3.3                       protobuf/v3.11.3
FLUKA/v2024.1                         pyorbit/v2023.11.20
Gate/v9.3                             Python/v2.7.10-3
Gate/v9.3-qttest                      Python/v3.10.13
gcc/v10.2.0                           Python/v3.10.2
gcc/v11.2.0                           Python/v3.6.5
gcc/v12.3.0                           quantum-espresso/v6.4.1
gcc/v4.9.3-1                          quantum-espresso/v6.6_oneapi
gcc/v5.3.0-1                          quantum-espresso/v7.3.1_openmpi503
gcc/v6.2.0-2                          R/v4.3.2
gcc/v7.2.0-1                          reduce-algebra/svn-4830
gcc/v8.2.0-1                          ROOT/v6-18-00
gcc/v8.3.0                            ROOT/v6.24.06-qttest
gcc/v9.1.0-1                          SMASH_gcc485/v1.8
gcc/v9.4.0                            Tesseract/v5.0.0_gcc1120
GEANT4/v11.1.3_gcc1120                TRNG/v4.24_gcc102
GEANT4/v11.1.3_gcc1120-mt             Valgrind/v3.16.1_gcc485
GEANT4/v11.1.3-qttest                 ViennaCL/v1.7.1_gcc1120_cuda101
GEANT4/v4.10.07.p01_gcc910            zlib/v1.2.11-1



 loaded modules:
Currently Loaded Modulefiles:
  1) GVR/v1.0-1               4) gcc/v11.2.0
  2) BASE/1.0                 5) openmpi/v4.1.1_gcc1120
  3) Python/v3.10.2

Running on host n02p004
Time is Thu Feb 20 16:32:12 MSK 2025 

The node's CPU model name	: Intel(R) Xeon(R) Platinum 8268 CPU @ 2.90GHz
This node has total 96 CPUs available for anEXCLUSIVE job.

 The total memory at the node (in GB)
              total        used        free      shared  buff/cache   available
Mem:            187          44          63           0          79         141
Swap:             3           0           3
Total:          191          44          66



My PATH=/cvmfs/hybrilit.jinr.ru/sw/slc7_x86-64/openmpi/v4.1.1_gcc1120/bin:/cvmfs/hybrilit.jinr.ru/sw/slc7_x86-64/gcc/v11.2.0/bin:/cvmfs/hybrilit.jinr.ru/sw/slc7_x86-64/Python/v3.10.2/bin:/lustre/home/user/m/milias/work/software/wien2k/wien2k_23.2_intelserial_mkl:/lustre/home/user/m/milias/work/software/wien2k/wien2k_23.2_intelserial_mkl/SRC_structeditor/bin:/lustre/home/user/m/milias/work/software/wien2k/wien2k_23.2_intelserial_mkl/SRC_IRelast/script-elastic:/lustre/home/user/m/milias/work/software/ams/linux.openmpi/ams2021.107/bin:/lustre/home/user/m/milias/work/software/wien2k/wien2k_23.2_intelserial_mkl:/lustre/home/user/m/milias/work/software/wien2k/wien2k_23.2_intelserial_mkl/SRC_structeditor/bin:/lustre/home/user/m/milias/work/software/wien2k/wien2k_23.2_intelserial_mkl/SRC_IRelast/script-elastic:/lustre/home/user/m/milias/work/software/ams/linux.openmpi/ams2021.107/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/puppetlabs/bin:.:/lustre/home/user/m/milias/work/software/wien2k/wien2k_23.2_intelserial_mkl:.:/lustre/home/user/m/milias/.local/bin:/lustre/home/user/m/milias/bin:.:/lustre/home/user/m/milias/work/software/wien2k/wien2k_23.2_intelserial_mkl:.

Python -v :Python 3.10.2

 mpirun ? /cvmfs/hybrilit.jinr.ru/sw/slc7_x86-64/openmpi/v4.1.1_gcc1120/bin/mpirun
mpirun (Open MPI) 4.1.1

Report bugs to http://www.open-mpi.org/community/help/

WARNING: Ignoring invalid distribution -ip (/lustre/home/user/m/milias/.local/lib/python3.10/site-packages)
Name: asap3
Version: 3.13.6
Summary: ASAP - classical potentials for MD with ASE.
Home-page: https://wiki.fysik.dtu.dk/asap
Author: 
Author-email: 
License: LGPLv3
Location: /lustre/home/user/m/milias/.local/lib/python3.10/site-packages
Requires: ase
Required-by: 

*** Running ASAP Test Suite ***

ASAP version 3.13.6 serial, compiled Feb 20 2025 14:07:46 on vm02.hydra.local using 'setuptools with None -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-function -Wno-c++11-compat-deprecated-writable-strings -Wno-unknown-attributes'
  Python module:  /lustre/home/user/m/milias/.local/lib/python3.10/site-packages/asap3/__init__.py
  C++ module:     /lustre/home/user/m/milias/.local/lib/python3.10/site-packages/_asap.cpython-310-x86_64-linux-gnu.so
  ase module:     /lustre/home/user/m/milias/.local/lib/python3.10/site-packages/ase/__init__.py

  Python version: 3.10.2 (main, Jan 21 2022, 10:10:36) [GCC 4.8.5 20150623 (Red Hat 4.8.5-28)]
  numpy version:  1.26.4
  ase version:    3.24.0
Usage: TestAll.py [options] [tests]

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -x test1.py,test2.py,..., --exclude=test1.py,test2.py,...
                        Exclude tests (comma separated list of tests).
  -f, --run-failed-tests-only
                        Run failed tests only.
  -p, --parallel        Run parallel tests only.
  -s, --slow            Also run slow tests.
  -t, --threads         Run with threading enabled.
  -T, --forcethreads    Run with threading enabled (4 threads forced).
  -v, --view-output     View output of all tests instead of redirecting them.
  -L, --leaktest        Enable leak testing.
  --printerrorfiles     Print outputs of failed tests.

 running SpecialEMT.py  ...
ASAP version 3.13.6 serial, compiled Feb 20 2025 14:07:46 on vm02.hydra.local using 'setuptools with None -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-function -Wno-c++11-compat-deprecated-writable-strings -Wno-unknown-attributes'
  Python module:  /lustre/home/user/m/milias/.local/lib/python3.10/site-packages/asap3/__init__.py
  C++ module:     /lustre/home/user/m/milias/.local/lib/python3.10/site-packages/_asap.cpython-310-x86_64-linux-gnu.so
  ase module:     /lustre/home/user/m/milias/.local/lib/python3.10/site-packages/ase/__init__.py

  Python version: 3.10.2 (main, Jan 21 2022, 10:10:36) [GCC 4.8.5 20150623 (Red Hat 4.8.5-28)]
  numpy version:  1.26.4
  ase version:    3.24.0
Checking single elements
Testing Al
Number of atoms (Al): SUCCESS
Energies (Al): SUCCESS
Forces (Al): SUCCESS
Testing Ni
Number of atoms (Ni): SUCCESS
Energies (Ni): SUCCESS
Forces (Ni): SUCCESS
Testing Cu
Number of atoms (Cu): SUCCESS
Energies (Cu): SUCCESS
Forces (Cu): SUCCESS
Testing Pd
Number of atoms (Pd): SUCCESS
Energies (Pd): SUCCESS
Forces (Pd): SUCCESS
Testing Ag
Number of atoms (Ag): SUCCESS
Energies (Ag): SUCCESS
Forces (Ag): SUCCESS
Testing Pt
Number of atoms (Pt): SUCCESS
Energies (Pt): SUCCESS
Forces (Pt): SUCCESS
Testing Au
Number of atoms (Au): SUCCESS
Energies (Au): SUCCESS
Forces (Au): SUCCESS
Checking B2 alloys
Testing NiAl
Number of atoms (NiAl): SUCCESS
Energies (NiAl): SUCCESS
Forces (NiAl): SUCCESS
Testing CuNi
Number of atoms (CuNi): SUCCESS
Energies (CuNi): SUCCESS
Forces (CuNi): SUCCESS
Testing PdCu
Number of atoms (PdCu): SUCCESS
Energies (PdCu): SUCCESS
Forces (PdCu): SUCCESS
Testing AgPd
Number of atoms (AgPd): SUCCESS
Energies (AgPd): SUCCESS
Forces (AgPd): SUCCESS
Testing PtAg
Number of atoms (PtAg): SUCCESS
Energies (PtAg): SUCCESS
Forces (PtAg): SUCCESS
Testing AuPt
Number of atoms (AuPt): SUCCESS
Energies (AuPt): SUCCESS
Forces (AuPt): SUCCESS
Checking Ruthenium
Testing Ru
Number of atoms (Ru): SUCCESS
Energies (Ru): SUCCESS
Forces (Ru): SUCCESS
Checking metallic glasses
Testing CuMg
Number of atoms (CuMg): SUCCESS
Energies (CuMg): SUCCESS
Forces (CuMg): SUCCESS
Testing CuZr
Number of atoms (CuZr): SUCCESS
Energies (CuZr): SUCCESS
Forces (CuZr): SUCCESS

 running Lattice.py  ...
/lustre/home/user/m/milias/.local/lib/python3.10/site-packages/asap3/analysis/localstructure.py:113: FutureWarning: Please use atoms.calc
  return _asap.CoordinationNumbers(atoms, rCut)
Test 'FCC 1': 4000 atoms
Number of atoms (FCC 1): SUCCESS
Coordination number is 12 (FCC 1): SUCCESS
CNA says FCC (FCC 1): SUCCESS
Potential energy (FCC 1): SUCCESS
Test 'FCC 2': 1560 atoms
Number of atoms (FCC 2): SUCCESS
Coordination number is 12 (FCC 2): SUCCESS
CNA says FCC (FCC 2): SUCCESS
Potential energy (FCC 2): SUCCESS
WARNING: Creating a left-handed coordinate system!
Test 'FCC 4': 5568 atoms
Number of atoms (FCC 4): SUCCESS
Coordination number is 12 (FCC 4): SUCCESS
CNA says FCC (FCC 4): SUCCESS
Potential energy (FCC 4): SUCCESS
Test 'FCC 5': 5568 atoms
Number of atoms (FCC 5): SUCCESS
Coordination number is 12 (FCC 5): SUCCESS
CNA says FCC (FCC 5): SUCCESS
Potential energy (FCC 5): SUCCESS
Test 'FCC 7': 4000 atoms
Number of atoms (FCC 7): SUCCESS
Coordination number is 12 (FCC 7): SUCCESS
CNA says FCC (FCC 7): SUCCESS
Potential energy (FCC 7): SUCCESS
WARNING: Creating a left-handed coordinate system!
Test 'FCC 8': 4000 atoms
Number of atoms (FCC 8): SUCCESS
Coordination number is 12 (FCC 8): SUCCESS
CNA says FCC (FCC 8): SUCCESS
Potential energy (FCC 8): SUCCESS
WARNING: Creating a left-handed coordinate system!
Test 'FCC 9': 4000 atoms
Number of atoms (FCC 9): SUCCESS
Coordination number is 12 (FCC 9): SUCCESS
CNA says FCC (FCC 9): SUCCESS
Potential energy (FCC 9): SUCCESS
WARNING: Creating a left-handed coordinate system!
Test 'FCC 10': 4000 atoms
Number of atoms (FCC 10): SUCCESS
Coordination number is 12 (FCC 10): SUCCESS
CNA says FCC (FCC 10): SUCCESS
Potential energy (FCC 10): SUCCESS
WARNING: Creating a left-handed coordinate system!
Test 'FCC 11': 4000 atoms
Number of atoms (FCC 11): SUCCESS
Coordination number is 12 (FCC 11): SUCCESS
CNA says FCC (FCC 11): SUCCESS
Potential energy (FCC 11): SUCCESS
Test 'BCC 1': 2000 atoms
Number of atoms (BCC 1): SUCCESS
Coordination number is 8 (BCC 1): SUCCESS
CNA says neither FCC nor HCP (BCC 1): SUCCESS
Test 'BCC 2': 6324 atoms
Number of atoms (BCC 2): SUCCESS
Coordination number is 8 (BCC 2): SUCCESS
CNA says neither FCC nor HCP (BCC 2): SUCCESS
WARNING: Creating a left-handed coordinate system!
Test 'BCC 3': 2700 atoms
Number of atoms (BCC 3): SUCCESS
Coordination number is 8 (BCC 3): SUCCESS
CNA says neither FCC nor HCP (BCC 3): SUCCESS
Test 'BCC 4': 2000 atoms
Number of atoms (BCC 4): SUCCESS
Coordination number is 8 (BCC 4): SUCCESS
CNA says neither FCC nor HCP (BCC 4): SUCCESS
WARNING: Creating a left-handed coordinate system!
Test 'BCC 5': 2000 atoms
Number of atoms (BCC 5): SUCCESS
Coordination number is 8 (BCC 5): SUCCESS
CNA says neither FCC nor HCP (BCC 5): SUCCESS
Test 'BC Orthorhombic/BCC': 2000 atoms
Number of atoms (BC Orthorhombic/BCC): SUCCESS
Coordination number is 8 (BC Orthorhombic/BCC): SUCCESS
CNA says neither FCC nor HCP (BC Orthorhombic/BCC): SUCCESS
Test 'BC Orthorhombic/FCC': 2000 atoms
Number of atoms (BC Orthorhombic/FCC): SUCCESS
Coordination number is 12 (BC Orthorhombic/FCC): SUCCESS
CNA says FCC (BC Orthorhombic/FCC): SUCCESS
Potential energy (BC Orthorhombic/FCC): SUCCESS
Test 'FC Orthorhombic/FCC': 4000 atoms
Number of atoms (FC Orthorhombic/FCC): SUCCESS
Coordination number is 12 (FC Orthorhombic/FCC): SUCCESS
CNA says FCC (FC Orthorhombic/FCC): SUCCESS
Potential energy (FC Orthorhombic/FCC): SUCCESS
Test 'Triclinic/FCC 1': 864 atoms
Number of atoms (Triclinic/FCC 1): SUCCESS
Coordination number is 12 (Triclinic/FCC 1): SUCCESS
CNA says FCC (Triclinic/FCC 1): SUCCESS
Potential energy (Triclinic/FCC 1): SUCCESS
Test 'Triclinic/FCC 2': 256 atoms
Number of atoms (Triclinic/FCC 2): SUCCESS
Coordination number is 12 (Triclinic/FCC 2): SUCCESS
CNA says FCC (Triclinic/FCC 2): SUCCESS
Potential energy (Triclinic/FCC 2): SUCCESS
Test 'Triclinic/FCC 3': 864 atoms
Number of atoms (Triclinic/FCC 3): SUCCESS
Coordination number is 12 (Triclinic/FCC 3): SUCCESS
CNA says FCC (Triclinic/FCC 3): SUCCESS
Potential energy (Triclinic/FCC 3): SUCCESS
Test 'Monoclinic/FCC': 1728 atoms
Number of atoms (Monoclinic/FCC): SUCCESS
Coordination number is 12 (Monoclinic/FCC): SUCCESS
CNA says FCC (Monoclinic/FCC): SUCCESS
Potential energy (Monoclinic/FCC): SUCCESS
Test 'Triclinic/BCC': 864 atoms
Number of atoms (Triclinic/BCC): SUCCESS
Coordination number is 8 (Triclinic/BCC): SUCCESS
CNA says neither FCC nor HCP (Triclinic/BCC): SUCCESS
Test 'HCP 1': 1000 atoms
Number of atoms (HCP 1): SUCCESS
Coordination number is 12 (HCP 1): SUCCESS
CNA says HCP (HCP 1): SUCCESS
Potential energy: 0.004592258326771701 eV/atom
       Step     Time          Energy          fmax
MDMin:    0 16:32:24        4.592258        0.000000
Change in potential energy (HCP 1): SUCCESS
ALL TESTS SUCCEEDED (85 tests were performed)

 running Trajectories.py  ...
Using Asap-optimized Verlet algorithm
Using Asap-optimized Verlet algorithm
Using Asap-optimized Verlet algorithm
Using Asap-optimized Verlet algorithm
ASAP version 3.13.6 serial, compiled Feb 20 2025 14:07:46 on vm02.hydra.local using 'setuptools with None -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-function -Wno-c++11-compat-deprecated-writable-strings -Wno-unknown-attributes'
  Python module:  /lustre/home/user/m/milias/.local/lib/python3.10/site-packages/asap3/__init__.py
  C++ module:     /lustre/home/user/m/milias/.local/lib/python3.10/site-packages/_asap.cpython-310-x86_64-linux-gnu.so
  ase module:     /lustre/home/user/m/milias/.local/lib/python3.10/site-packages/ase/__init__.py

  Python version: 3.10.2 (main, Jan 21 2022, 10:10:36) [GCC 4.8.5 20150623 (Red Hat 4.8.5-28)]
  numpy version:  1.26.4
  ase version:    3.24.0
Writing trajectory
Reading trajectory (recalculating energies)
Checking frame 0: SUCCESS
Checking frame 1: SUCCESS
Checking frame 2: SUCCESS
Checking frame 3: SUCCESS
Checking frame 4: SUCCESS
Checking frame 5: SUCCESS
Checking frame 6: SUCCESS
Checking frame 7: SUCCESS
Checking frame 8: SUCCESS
Checking frame 9: SUCCESS
Checking frame 10: SUCCESS
Reading trajectory (stored energies)
Checking frame 0: SUCCESS
Checking frame 1: SUCCESS
Checking frame 2: SUCCESS
Checking frame 3: SUCCESS
Checking frame 4: SUCCESS
Checking frame 5: SUCCESS
Checking frame 6: SUCCESS
Checking frame 7: SUCCESS
Checking frame 8: SUCCESS
Checking frame 9: SUCCESS
Checking frame 10: SUCCESS
Repeating simulation
Rerun[0]: SUCCESS
Rerun[1]: SUCCESS
Rerun[2]: SUCCESS
Rerun[3]: SUCCESS
Rerun[4]: SUCCESS
Appending to trajectory
Reading longer trajectory
Checking frame 0: SUCCESS
Checking frame 1: SUCCESS
Checking frame 2: SUCCESS
Checking frame 3: SUCCESS
Checking frame 4: SUCCESS
Checking frame 5: SUCCESS
Checking frame 6: SUCCESS
Checking frame 7: SUCCESS
Checking frame 8: SUCCESS
Checking frame 9: SUCCESS
Checking frame 10: SUCCESS
Checking frame 11: SUCCESS
Checking frame 12: SUCCESS
Checking frame 13: SUCCESS
Checking frame 14: SUCCESS
Checking frame 15: SUCCESS
Writing trajectory with write
Writing a trajectory without precalculated energies.
Deleting trajectory
ALL TESTS SUCCEEDED (43 tests were performed)
