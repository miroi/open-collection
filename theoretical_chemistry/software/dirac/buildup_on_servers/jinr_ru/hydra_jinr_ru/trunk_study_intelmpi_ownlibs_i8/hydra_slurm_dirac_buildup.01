#!/bin/bash

#SBATCH -J DIR3

##  partition (queue)
#SBATCH -p cascade
##SBATCH -p knl
##SBATCH -p long
##SBATCH -p flnr-ice

## max. execution time
#SBATCH -t 0-04:00:00

##SBATCH --exclusive

##SBATCH --mem=128GB
#SBATCH --mem=32GB

# do not restart in the case of nodefail!
#SBATCH --no-requeue
#SBATCH --no-kill

#SBATCH -N 1 -n 4
##SBATCH --ntasks-per-node=12

##SBATCH  --sockets-per-node=1

## memory NO !!!
##SBATCH --mem-per-cpu=28G

## stdout/stderr output file
##SBATCH -o log_slurm_job.%j.%N.std_out_err
#SBATCH -o log_slurm_job.%j.%N.std_out

## mail
##SBATCH --mail-user=siuraksh@jinr.ru
#SBATCH --mail-type=ALL

echo -e "\nRunning on host `hostname`"
echo -e "Time is `date` \n"
ulimit -s unlimited

echo -e "\n The total memory at the node (in GB)"
free -t -g
echo -e "\n"
 
echo Job user is $SLURM_JOB_USER and his job $SLURM_JOB_NAME has assigned ID $SLURM_JOBID
echo This job was submitted from the computer $SLURM_SUBMIT_HOST
echo and from the home directory:
echo $SLURM_SUBMIT_DIR
echo
echo It is running on the cluster compute node:
echo $SLURM_CLUSTER_NAME
echo and is employing $SLURM_JOB_NUM_NODES node/nodes:
echo $SLURM_JOB_NODELIST
echo
echo -e "Job partition is $SLURM_JOB_PARTITION \n"
echo The job requests $SLURM_CPUS_ON_NODE CPU per task.

# CPU model, total numer of CPUs, number of allocated CPUs
echo -e "The node's CPU \c"; cat /proc/cpuinfo | grep 'model name' | uniq
NPROCS=`cat /proc/cpuinfo | grep processor | wc -l`
echo "This node has total NPROCS=$NPROCS CPUs available for an EXCLUSIVE job."
echo "Based on reserved memory, this node got SLURM_CPUS_ON_NODE=$SLURM_CPUS_ON_NODE CPUs allocated for SLURM calculations."
echo "This job wants SLURM_NTASKS=$SLURM_NTASKS threads . "


#MACHINEFILE="nodes.$SLURM_JOB_PARTITION.$SLURM_JOB_ID"
# Generate Machinefile for mpi such that hosts are in the same
# order as if run via srun
#srun -l /bin/hostname | sort -n | awk '{print $2}' > $MACHINEFILE
echo -e "\n Allocated working nodes:"
srun -l /bin/hostname | sort -n | awk '{print $2}' 
#echo -e "\ngenerated machinefile for MPI, $MACHINEFILE"; ls -lt $PWD/$MACHINEFILE; echo "containing:"; cat $MACHINEFILE

echo -e "\n\n loaded modules:"
module purge
module add GVR/v1.0-1
module add Python/v3.10.2
module add CMake/v3.29.2
module add  intel/v2021.1
#module add openmpi/v5.0.3_gcc1230
#module add LAPACK/v3.12.0_gcc1230
module list

echo -e "\n python ? :\c"; which python; python -V
echo -e "  cmake ? :\c";  which cmake; cmake --version
echo -e "  mpiifort ? :\c"; which mpiifort; mpiifort -V
echo -e "  mpiicc ? :\c"; which mpiicc; mpiicc -V
echo -e "  mpiicc ? :\c"; which mpiicpc; mpiicpc  -V
echo -e "\n Intel MKL library ? MKLROOT=$MKLROOT"; ls -lt  $MKLROOT/lib/intel64

echo -e "\n The variable PATH=$PATH\n"

#DIRAC=/lustre/home/user/m/milias/work/software/dirac/trunk
DIRAC=/lustre/home/user/m/milias/work/software/dirac/trunk_study
cd $DIRAC
pwd

BUILD=build_intelmpi_ownlibs_i8
echo -e "\n DIRAC build directory, BUILD=$BUILD"
if [ -d $BUILD ]; then
  echo "Directory BUILD exists. Going to delete it ! \n"
  /bin/rm -rf $BUILD
  echo "Directory BUILD deleted. It will be created again. \n"
fi

./setup --mpi --exatensor=OFF --pcmsolver=OFF  --cmake-options="-D ENABLE_PELIB=OFF -D ENABLE_BUILTIN_BLAS=ON -D ENABLE_BUILTIN_LAPACK=ON" --fc=mpiifort  --cc=mpiicc --cxx=mpiicpc --int64 $BUILD

cd $BUILD
echo -e "\n I am in : \c "; pwd
cmake ..
echo -e "Going to compile...  make -j $SLURM_CPUS_ON_NODE :"
make -j $SLURM_CPUS_ON_NODE

echo -e "\n After the compilation, perform ldd dirac.x:"
ldd dirac.x

echo -e "\n\n  mpirun ? :\c"; which mpirun; mpirun  -V
export DIRAC_MPI_COMMAND="mpirun -np 2"
echo -e "\n For ctest, setting DIRAC_MPI_COMMAND=$DIRAC_MPI_COMMAND"
echo -e "\n  Running ctest -j2 -L short :"
ctest -j2 -L short



exit
