#!/bin/bash

## jobname
#SBATCH -J QEbuild

##  partition (queue)
##SBATCH -p cascade
##SBATCH -p knl
##SBATCH -p flnr-ice
#SBATCH -p slo-ice

##SBATCH --qos=dirac

## max. execution time
##SBATCH -t 3-00:00:00
#SBATCH -t 0-08:00:00

##SBATCH --exclusive

#SBATCH --mem=64GB
##SBATCH --mem=32GB

##SBATCH --mem-per-cpu=4GB

# do not restart in the case of nodefail!
##SBATCH --no-requeue
##SBATCH --no-kill

#
#SBATCH -N 1
#SBATCH --ntasks-per-node=6


## stdout/stderr output file
#SBATCH -o log_slurm_job.%j.%N.std_out_err

## E-mail
#SBATCH --mail-user=milias@theor.jinr.ru
#SBATCH --mail-type=ALL

echo -e "\nRunning on host `hostname`"
echo -e "Date & Time is `date` \n"

echo -e "\nJob user is SLURM_JOB_USER= $SLURM_JOB_USER"
echo -e "User job SLURM_JOB_NAME=$SLURM_JOB_NAME has assigned ID SLURM_JOBID=$SLURM_JOBID"
echo -e "This job was submitted from the computer SLURM_SUBMIT_HOST=$SLURM_SUBMIT_HOST"
echo -e "and from the home directory SLURM_SUBMIT_DIR:"
echo -e "$SLURM_SUBMIT_DIR"

echo -e "Job is running on the cluster compute node: SLURM_CLUSTER_NAME=$SLURM_CLUSTER_NAME"
echo -e "and is employing SLURM_JOB_NUM_NODES=$SLURM_JOB_NUM_NODES node/nodes:"
echo -e "SLURM_JOB_NODELIST = $SLURM_JOB_NODELIST"
echo -e "Job partition is SLURM_JOB_PARTITION=$SLURM_JOB_PARTITION \n"
echo -e "Number of allocated CPUs on each single node, SLURM_CPUS_ON_NODE=$SLURM_CPUS_ON_NODE ."
echo -e "Number of all reserved threads over ALL nodes, SLURM_NTASKS=$SLURM_NTASKS ."
echo -e "Job has reserved memory per node, SLURM_MEM_PER_NODE=$SLURM_MEM_PER_NODE MB of memory"

MACHINEFILE="nodes.$SLURM_JOB_PARTITION.$SLURM_JOB_ID"
# Generate Machinefile for mpi such that hosts are in the same
# order as if run via srun
srun -l /bin/hostname | sort -n | awk '{print $2}' > $MACHINEFILE
echo -e "\ngenerated machinefile for MPI, $MACHINEFILE"; ls -lt $PWD/$MACHINEFILE; echo "containing:"; cat $MACHINEFILE

# CPU model, total numer of CPUs, number of allocated CPUs
echo -e "The node's CPU \c"; cat /proc/cpuinfo | grep 'model name' | uniq
NPROCS=`cat /proc/cpuinfo | grep processor | wc -l`
echo "BTW, this node has total $NPROCS CPUs available for an EXCLUSIVE job."
echo "Based on reserved memory, this node got $SLURM_CPUS_ON_NODE CPUs allocated for SLURM calculations."
echo "This job wants SLURM_NTASKS=$SLURM_NTASKS threads . "

#RATIO=$(( $SLURM_CPUS_ON_NODE / $SLURM_NTASKS ))
#echo -e "Ratio SLURM_CPUS_ON_NODE/SLURM_NTASKS=$SLURM_CPUS_ON_NODE/$SLURM_NTASKS=\c";echo $(( $SLURM_CPUS_ON_NODE / $SLURM_NTASKS ))
#echo -e $RATIO
# set OpenMP threads accordingly
#export USE_OPENMP=1
#export OPENBLAS_NUM_THREADS=$RATIO
#echo -e "\nFor openblas internal parallelization, OPENBLAS_NUM_THREADS=$OPENBLAS_NUM_THREADS"


module purge
#module load GVR/v1.0-1 gcc/v11.2.0 fftw/v3.3.10_gcc1120 LAPACK/v3.9.0 openmpi/v4.1.1_gcc1120
module load GVR/v1.0-1 intel/v2021.1 Python/v3.10.13 CMake/v3.29.2 ELPA/v2025.01.002_oneapi

echo -e "\n adding git module from source /cvmfs/nica.jinr.ru/sw/os/login.sh :"
source /cvmfs/nica.jinr.ru/sw/os/login.sh
module add git


echo -e "\n\n loaded modules:"
module list

echo -e "\nRunning on host `hostname`"
echo -e "Time is `date` \n"

echo -e "\n The total memory at the node (in GB)"
free -t -g

echo -e "\n\n My PATH=$PATH\n"
echo -e "\n My LD_LIBRARY_PATH=$LD_LIBRARY_PATH "
echo -e "\n python ? ; python -v :\c"; which python; python -V
echo -e "\n ifort ? ; ifort -V: \c"; which ifort; ifort -V
echo -e "\n mpiifort ? ;  mpiifort -V: \c";which mpiifort;  mpiifort -V
echo -e "\n icc ? ; icc -V: \c"; which icc;  icc -V
echo -e "\n Intel MKL library ? MKLROOT=$MKLROOT"
echo -e "\n mpirun ? \c"; which mpirun; mpirun --version
echo -e "\n cmake ? \c"; which cmake; cmake --version
echo -e "\n git ? \c"; which git; git --version

# for running jobs from your homedir, use ...
#cd $SLURM_SUBMIT_DIR

QE=/lustre/home/user/m/milias/work/software/quantum-espresso/qe-develop/q-e
BUILD=build_intelmpi_mkl_elpa

#mkdir $QE/$BUILD

echo -e "\n\n QE=$QE"
echo -e "ls $QE/"
ls $QE/

cd $QE/$BUILD

echo -e "\n Current directory where this SLURM job is running `pwd`"
echo " It has the disk space of (df -h) :"
df -h .
echo -e "\n ls -lt $PWD"; ls -lt

#
# see https://gitlab.com/QEF/q-e/-/wikis/Developers/CMake-build-system
#

echo -e "\n\n\n Running cmake :"
#cmake -DQE_ENABLE_MPI=ON -DQE_ENABLE_MPI_MODULE=ON -DCMAKE_C_COMPILER=icc -DCMAKE_CXX_COMPILER=icpc -DCMAKE_Fortran_COMPILER=mpiifort -DCMAKE_Fortran_FLAGS="-g -Winline -diag-dump -diag-enable=all"  .. 

#cmake -DQE_ENABLE_MPI=ON -DQE_ENABLE_MPI_MODULE=ON -DCMAKE_C_COMPILER=icc -DCMAKE_CXX_COMPILER=icpc -DCMAKE_Fortran_COMPILER=mpiifort -DCMAKE_Fortran_FLAGS="-g -Winline -diag-enable=all -qopt-report=4 -qopt-report-phase ipo"  .. 

#cmake -DQE_ENABLE_MPI=ON -DQE_ENABLE_MPI_MODULE=ON -DCMAKE_C_COMPILER=icc -DCMAKE_CXX_COMPILER=icpc -DCMAKE_Fortran_COMPILER=mpiifort -DCMAKE_Fortran_FLAGS="-g -traceback" -DQE_ENABLE_SCALAPACK=ON -DQE_ENABLE_LIBXC=ON -DQE_ENABLE_HDF5=ON  .. 

cmake -DQE_ENABLE_MPI=ON -DQE_ENABLE_MPI_MODULE=ON -DCMAKE_C_COMPILER=icc -DCMAKE_CXX_COMPILER=icpc -DCMAKE_Fortran_COMPILER=mpiifort -DCMAKE_Fortran_FLAGS="-g -traceback" -DQE_ENABLE_SCALAPACK=OFF -DQE_ENABLE_ELPA=ON -DQE_ENABLE_LIBXC=OFF -DQE_ENABLE_HDF5=OFF  .. 

echo -e "\n\n Running make -j $SLURM_CPUS_ON_NODE :"
make -j $SLURM_CPUS_ON_NODE

echo -e "\n\n content of $QE/$BUILD/bin  :"
ls -lt $QE/$BUILD/bin

echo -e "\n\n ldd $QE/$BUILD/bin/pw.x :"
ldd $QE/$BUILD/bin/pw.x

echo -e "\n\n running ctest -j  $SLURM_CPUS_ON_NODE :"
ctest -j  $SLURM_CPUS_ON_NODE

echo -e "\n\n End of script. Date & Time is `date` \n"

exit
