#!/bin/bash
#SBATCH -J QE

## max. execution time
##SBATCH -t 4-00:00:00
#SBATCH -t 0-08:00:00

# number of nodes
#SBATCH -N 1
##SBATCH --exclusive
##SBATCH --mem=120GB
##SBATCH --mem=48GB
#SBATCH --mem=24GB

# do not restart in the case of nodefail!
#SBATCH --no-requeue
#SBATCH --no-kill

## CPU count  - max. 40 per node ?
##SBATCH -n 6

##  partition (queue)
##SBATCH -p long
#SBATCH -p main

## memory NO !!!
##SBATCH --mem-per-cpu=28G

## stdout/stderr output file
#SBATCH -o log_slurm_job.%j.%N.std_out_err

## mail
#SBATCH --mail-user=M.Ilias@gsi.de 
#SBATCH --mail-type=ALL

 
echo -e "Job user is SLURM_JOB_USER= $SLURM_JOB_USER"
echo -e "User job SLURM_JOB_NAME=$SLURM_JOB_NAME has assigned ID SLURM_JOBID=$SLURM_JOBID"

echo -e "This job was submitted from the computer SLURM_SUBMIT_HOST=$SLURM_SUBMIT_HOST"
echo -e " and from the home directory SLURM_SUBMIT_DIR=$SLURM_SUBMIT_DIR"

echo -e "Job is running on the cluster compute node: SLURM_CLUSTER_NAME=$SLURM_CLUSTER_NAME"
echo -e "and is employing SLURM_JOB_NUM_NODES=$SLURM_JOB_NUM_NODES node/nodes:"
echo -e "SLURM_JOB_NODELIST = $SLURM_JOB_NODELIST"
echo
echo -e "Job partition is SLURM_JOB_PARTITION=$SLURM_JOB_PARTITION \n"
echo -e "The job requests SLURM_CPUS_ON_NODE=$SLURM_CPUS_ON_NODE CPU per task."

module use /cvmfs/it.gsi.de/modulefiles/
echo "modules at disposal:"
module avail
echo

#
#source /lustre/ukt/milias/bin/intel-mpi-mkl_2019.4/intel/bin/compilervars.sh intel64 -platform linux  
#source /lustre/ukt/milias/bin/intel-mpi-mkl_2019.4/intel/bin/compilervars.sh intel64 -platform linux 
#source /lustre/ukt/milias/bin/intel-mpi-mkl_2019.4/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/bin/mpivars.sh
#module load compiler/intel/19.0 echo -e "Activated Intel 19.0, MKL & Intel-MPI"
#which mpiifort; which mpiicc; which mpiicpc; which mpirun
#mpiifort -v; mpiicc -v; mpirun --version

module purge
module load openmpi/intel/4.0.3_intel19.0


echo -e "\n\n loaded modules:"
module list

echo -e "\nRunning on host `hostname`"
echo -e "Time is `date` \n"

# CPU model, total numer of CPUs, number of allocated CPUs
echo -e "The node's CPU \c"; cat /proc/cpuinfo | grep 'model name' | uniq
NPROCS=`cat /proc/cpuinfo | grep processor | wc -l`
echo "BTW, this node has total $NPROCS CPUs available for EXCLUSIVE job."
#echo "This node has $SLURM_CPUS_ON_NODE CPUs allocated for SLURM calculations."

echo -e "\n the memory at the node (in GB)"
free -t -g
echo -e "\n"

## set internal OpenMP parallelization for MKL - Slurm CPU count
#export MKL_NUM_THREADS=$SLURM_CPUS_ON_NODE
#export MKL_NUM_THREADS=24
#export MKL_NUM_THREADS=$NPROCS
#echo -e  "\nInternal MKL parallelization MKL_NUM_THREADS=$MKL_NUM_THREADS\n"

export OMP_NUM_THREADS=1
export MKL_DYNAMIC="FALSE"
export OMP_DYNAMIC="FALSE"

#export DIRAC_MPI_COMMAND="mpirun -np $SLURM_CPUS_ON_NODE"
export QE=/lustre/ukt/milias/work/software/quantum-espresso/qe-6.7/bin

echo -e "\nldd $QE/pw.x:"; ldd $QE/pw.x

echo -e "\n ifort -V: \c"; ifort -V

echo -e "\nMy PATH=$PATH\n"
echo -e "Python -v :\c"; python -V
echo -e "\n mpirun ? \c"; which mpirun; mpirun --version
echo

export SCRATCH_TMPDIR=/lustre/ukt/milias/scratch
echo -e "\nQE scratch directory space, $SCRATCH_TMPDIR"
df -h $SCRATCH_TMPDIR/.
echo -e "\n For comparison, /tmp local disk;  df -h /tmp/."; df -h /tmp
echo -e "\n"

# for running jobs from your homedir
cd $SLURM_SUBMIT_DIR

#
#export MKL_NUM_THREADS=1
#echo -e "\nThis node has $NPROCS CPUs available for this EXCLUSIVE JOB and dirac.x is running via $THISMPI threads."
#echo -e "Therefore, for the MKL internal parallelization, number of calculated threads=$MKL_NUM_THREADS \n"
#
 proj=Si.vc_relax
 mpirun -np 4 $QE/pw.x < $proj.in > $proj.$SLURM_JOB_PARTITION.$SLURM_JOBID.out


exit
