Start Singularity container /cvmfs/vae.gsi.de/vae23/containers/vae23-user_container_20230617T0229.sif
INFO:    Environment variable SINGULARITYENV_PATH is set, but APPTAINERENV_PATH is preferred
INFO:    Environment variable SINGULARITYENV_LD_LIBRARY_PATH is set, but APPTAINERENV_LD_LIBRARY_PATH is preferred
WARNING: While bind mounting '/etc/slurm:/etc/slurm': destination is already in the mount point list
WARNING: While bind mounting '/var/run/munge:/var/run/munge': destination is already in the mount point list
WARNING: While bind mounting '/var/spool/slurm:/var/spool/slurm': destination is already in the mount point list
WARNING: While bind mounting '/var/lib/sss/pipes/nss:/var/lib/sss/pipes/nss': destination is already in the mount point list
WARNING: While bind mounting '/cvmfs:/cvmfs': destination is already in the mount point list
Job user is milias and his job LvO2@Qgp has assigned ID 3124421
This job was submitted from the computer lxbk1135
and from the home directory:
/lustre/ukt/milias/work/projects/open-collection/theoretical_chemistry/software/wien2k/runs/LvO2_on_small_quartz/wien2k/LvO2onQg

It is running on the cluster compute node:
virgo
and is employing 1 node/nodes:
lxbk0781

Job partition is long 

The job requests SLURM_NTASKS=8.

Sparc modules loading:

 All loaded modules, spack find --loaded:
-- linux-debian10-x86_64 / gcc@10.2.0 ---------------------------
amdfftw@3.0
amdscalapack@3.2
autoconf@2.69
autoconf-archive@2022.02.11
automake@1.16.5
bison@3.8.2
bzip2@1.0.8
ca-certificates-mozilla@2022-10-11
cmake@3.24.3
curl@7.85.0
diffutils@3.8
elpa@2021.11.001
expat@2.4.8
gawk@5.1.1
gdbm@1.23
gettext@0.21.1
glib@2.74.1
gmp@6.2.1
hwloc@2.8.0
json-c@0.16
krb5@1.19.3
libbsd@0.11.5
libedit@3.1-20210216
libevent@2.1.12
libffi@3.4.2
libgcrypt@1.10.1
libgpg-error@1.46
libiconv@1.16
libmd@1.0.4
libpciaccess@0.16
libsigsegv@2.13
libtool@2.4.7
libxml2@2.10.1
lz4@1.9.4
m4@1.4.19
meson@0.63.3
mpfr@4.1.0
munge@0.5.13
ncurses@6.1
ninja@1.11.1
numactl@2.0.14
openblas@0.3.21
openmpi@4.1.5
openssh@9.1p1
openssl@1.1.1s
pcre2@10.39
perl@5.16.3
pigz@2.7
pkgconf@1.8.0
pmix@3.2.2
py-pip@22.2.2
py-setuptools@59.4.0
py-wheel@0.37.1
python@3.10.8
rdma-core@22.4
readline@8.1.2
slurm@21-08-8-2
sqlite@3.39.4
tar@1.34
texinfo@6.5
ucx@1.9.0
util-linux-uuid@2.38.1
util-macros@1.19.3
xz@5.2.7
zlib@1.2.13
zstd@1.5.2

 Check of compilers and libraries:
/usr/bin/tcsh
tcsh 6.20.00 (Astron) 2016-11-24 (x86_64-unknown-linux) options wide,nls,dl,al,kan,sm,rh,nd,color,filec
/cvmfs/vae.gsi.de/vae23/spack-0.19/opt/linux-debian10-x86_64/gcc-10.2.0/openmpi-4.1.5-phbdvrf3few3givo575jlifx6dhnfgk7/bin/mpif90
GNU Fortran (Spack GCC) 10.2.0
Copyright (C) 2020 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

/cvmfs/vae.gsi.de/vae23/spack-0.19/opt/linux-debian10-x86_64/gcc-10.2.0/openmpi-4.1.5-phbdvrf3few3givo575jlifx6dhnfgk7/bin/mpirun
mpirun (Open MPI) 4.1.5

Report bugs to http://www.open-mpi.org/community/help/
OpenBLAS library:
-- linux-debian10-x86_64 / gcc@10.2.0 ---------------------------
openblas@0.3.21  /cvmfs/vae.gsi.de/vae23/spack-0.19/opt/linux-debian10-x86_64/gcc-10.2.0/openblas-0.3.21-q7nhojttkz52xuf4zkxk7vvgllqnxh34
cmake
libopenblas.a
libopenblas-r0.3.21.a
libopenblas-r0.3.21.so
libopenblas.so
libopenblas.so.0
pkgconfig

Running on host lxbk0781
Time is Thu 22 Jun 2023 10:54:26 PM CEST 

The node's CPU model name	: Intel(R) Xeon(R) Gold 6248R CPU @ 3.00GHz
This node has total 96 CPUs available for an EXCLUSIVE job.
SLURM_CPUS_ON_NODE=64
SLURM_NTASKS_PER_SOCKET=
SLURM_NTASKS_PER_NODE=
SLURM_NTASKS_PER_CORE=
SLURM_PARTITION=
SLURM_MEM_PER_NODE=131072

 The total memory at the node (in GB)
              total        used        free      shared  buff/cache   available
Mem:            187          28         153           0           5         157
Swap:             9           0           9
Total:          196          28         163


WIENROOT=/lustre/ukt/milias/work/software/wien2k/Wien2k_23.2_gnu_openmpi_openblas

Creating scratch directory, SCRATCH=/lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg
I am in $SCRATCH directrory :
/lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg

 number of hosts in .machines, SLURM_NTASKS=8, counter=9

 content of file /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/.machines:
# nodes for parallel job 
omp_global:4 
1:localhost
1:localhost
1:localhost
1:localhost
1:localhost
1:localhost
1:localhost
1:localhost

 running 'x -p dstart' :
starting parallel dstart at Thu 22 Jun 2023 10:54:27 PM CEST
-------- .machine0 : processors
running dstart in single mode
STOP DSTART ENDS
7.498u 0.267s 0:04.88 158.8%	0+0k 161848+101152io 451pf+0w

 running 'run_lapw .... '
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 2    ETEST: 0   CTEST: 0   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[6]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 3    ETEST: 0   CTEST: 0   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
[4]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 4    ETEST: .1089557600000000   CTEST: 2.6824558   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[7]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 5    ETEST: .1617047550000000   CTEST: 2.6310171   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[6]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 6    ETEST: .7395476500000000   CTEST: 2.4450027   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 7    ETEST: .5438938750000000   CTEST: 3.3618585   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
[4]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 8    ETEST: .5962820850000000   CTEST: 3.3848411   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 9    ETEST: .1817422500000000   CTEST: 3.0939819   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[6]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 10    ETEST: .9230818800000000   CTEST: 3.5938815   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 11    ETEST: .5263663750000000   CTEST: 3.3610385   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[7]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 12    ETEST: .4000647300000000   CTEST: 2.8490030   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[1]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 13    ETEST: .5535576450000000   CTEST: 3.3113185   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 14    ETEST: .8169393800000000   CTEST: 1.1046412   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[4]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 15    ETEST: .4670880250000000   CTEST: .7194718   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[7]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 16    ETEST: .1509950300000000   CTEST: 1.1393247   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 17    ETEST: .1877434850000000   CTEST: .9654468   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 18    ETEST: .0388272400000000   CTEST: 1.1284475   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[7]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 19    ETEST: .2126400850000000   CTEST: .6422160   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[6]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 20    ETEST: .0878062100000000   CTEST: .4826021   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 21    ETEST: .0259438200000000   CTEST: .4642595   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 22    ETEST: .0359445650000000   CTEST: .6273719   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
STOP  LAPW1 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 23    ETEST: .0356984400000000   CTEST: .4004083   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[6]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 24    ETEST: .0602925800000000   CTEST: .5034224   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 25    ETEST: .0578481000000000   CTEST: .3614586   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 26    ETEST: .0246132950000000   CTEST: .2375000   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[1]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 27    ETEST: .0087680050000000   CTEST: .1114595   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[6]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 28    ETEST: .0052427500000000   CTEST: .1194931   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 29    ETEST: .0022382900000000   CTEST: .0952146   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 30    ETEST: .0010275300000000   CTEST: .0738249   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
[1]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 31    ETEST: .0057919800000000   CTEST: .0629376   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 32    ETEST: .0058264950000000   CTEST: .0758403   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 33    ETEST: .0016690050000000   CTEST: .0641423   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 34    ETEST: .0015170850000000   CTEST: .0699044   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 35    ETEST: .0005360650000000   CTEST: .0700215   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[6]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 36    ETEST: .0002999800000000   CTEST: .0712101   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 37    ETEST: .0002949150000000   CTEST: .0701382   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 38    ETEST: .0002757250000000   CTEST: .0724499   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 39    ETEST: .0006124100000000   CTEST: .0648421   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 40    ETEST: .0010686450000000   CTEST: .0805214   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 41    ETEST: .0009552750000000   CTEST: .0700936   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[6]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 42    ETEST: .0001352900000000   CTEST: .0651264   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[7]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 43    ETEST: .0013536900000000   CTEST: .0524374   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[7]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 44    ETEST: .0006337300000000   CTEST: .0500663   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 45    ETEST: .0002135600000000   CTEST: .0526017   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
STOP  LAPW1 END
[4]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 46    ETEST: .0007064800000000   CTEST: .0540779   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[7]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 47    ETEST: .0007932800000000   CTEST: .0624514   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[7]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 48    ETEST: .0004837750000000   CTEST: .0494604   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
STOP  LAPW1 END
[6]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 49    ETEST: .0008123400000000   CTEST: .0518466   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 50    ETEST: .0009110750000000   CTEST: .0479775   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 51    ETEST: .0008033800000000   CTEST: .0461396   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[7]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 52    ETEST: .0003671350000000   CTEST: .0454935   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 53    ETEST: .0004907400000000   CTEST: .0447696   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[6]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 54    ETEST: .0010345450000000   CTEST: .0414968   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 55    ETEST: .0009964500000000   CTEST: .0316725   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 56    ETEST: .0006540950000000   CTEST: .0252028   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[7]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
[1]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 57    ETEST: .0001808950000000   CTEST: .0298846   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 58    ETEST: .0001477900000000   CTEST: .0260548   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 59    ETEST: .0001016650000000   CTEST: .0253221   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1
in cycle 60    ETEST: .0012254750000000   CTEST: .0198422   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
ec cc fc and str_conv 0 1 1 1

>   energy in SCF NOT CONVERGED

 running 'run_lapw with -min .... '
changing TOT to FOR in LvO2onQg.in2c
STOP  PairHess END
0.067u 0.104s 0:03.02 5.2%	0+0k 26856+184io 73pf+0w
LvO2onQg.broyd* files present ! You did not save_lapw a previous clculation.
You have 60 seconds to kill this job ( ^C   or   kill 3198127 )
or the script will rm *.broyd* and continue (use -NI to avoid automatic rm)
STOP  LAPW0 END
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 2    ETEST: .0002528900000000   CTEST: .0191042   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[7]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 3    ETEST: .0093284200000000   CTEST: .0234953   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 4    ETEST: .0049036500000000   CTEST: .0232766   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 5    ETEST: .0014195300000000   CTEST: .0255369   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 6    ETEST: .0029146100000000   CTEST: .0293345   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[6]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 7    ETEST: .0011256650000000   CTEST: .0279073   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 8    ETEST: .0062838350000000   CTEST: .0399208   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[7]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 9    ETEST: .0080288700000000   CTEST: .0757400   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 10    ETEST: .0023277200000000   CTEST: .0742877   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 11    ETEST: .0004189650000000   CTEST: .0730022   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 12    ETEST: .0000566950000000   CTEST: .0716149   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 13    ETEST: .0016482150000000   CTEST: .0508077   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 14    ETEST: .0010806750000000   CTEST: .0514466   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[7]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 15    ETEST: .0017106700000000   CTEST: .0550865   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 16    ETEST: .0008549850000000   CTEST: .0550320   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 17    ETEST: .0066283050000000   CTEST: .0745870   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 18    ETEST: .0105081700000000   CTEST: .0863183   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 19    ETEST: .0054177050000000   CTEST: .0898206   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 20    ETEST: .0009065850000000   CTEST: .0867203   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[6]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 21    ETEST: .0036590600000000   CTEST: .0811380   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 22    ETEST: .0046230050000000   CTEST: .0899098   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 23    ETEST: .0030219900000000   CTEST: .0873136   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 24    ETEST: .0029433250000000   CTEST: .0832526   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[6]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 25    ETEST: .0036988250000000   CTEST: .0760185   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 26    ETEST: .0011134900000000   CTEST: .0778997   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 27    ETEST: .0061585950000000   CTEST: .0789279   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[4]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 28    ETEST: .0039130800000000   CTEST: .0734417   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[6]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 29    ETEST: .0005652600000000   CTEST: .0696579   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[6]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 30    ETEST: .0001324550000000   CTEST: .0730335   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[6]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 31    ETEST: .0016161450000000   CTEST: .0691983   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 32    ETEST: .0024797850000000   CTEST: .0604358   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 33    ETEST: .0022126800000000   CTEST: .0608249   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[7]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 34    ETEST: .0021728150000000   CTEST: .0608238   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 35    ETEST: .0034823550000000   CTEST: .0599928   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[7]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 36    ETEST: .0013738000000000   CTEST: .0593933   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 37    ETEST: .0039767350000000   CTEST: .0564280   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 38    ETEST: .0070639600000000   CTEST: .0565291   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[6]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 39    ETEST: .0053246150000000   CTEST: .0581720   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[6]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 40    ETEST: .0034196000000000   CTEST: .0576535   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 41    ETEST: .0018159800000000   CTEST: .0574786   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[6]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 42    ETEST: .0010483100000000   CTEST: .0567948   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[4]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 43    ETEST: .0004811450000000   CTEST: .0540444   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 44    ETEST: .0006035950000000   CTEST: .0537874   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 45    ETEST: .0017567200000000   CTEST: .0551486   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[6]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 46    ETEST: .0008278750000000   CTEST: .0559748   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 47    ETEST: .0017585750000000   CTEST: .0552796   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 48    ETEST: .0035082350000000   CTEST: .0668860   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[7]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 49    ETEST: .0034919200000000   CTEST: .0737994   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 50    ETEST: .0021386200000000   CTEST: .0594644   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[2]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 51    ETEST: .0024163700000000   CTEST: .0575724   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[7]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 52    ETEST: .0004232050000000   CTEST: .0575029   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[7]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 53    ETEST: .0021190200000000   CTEST: .0671305   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 54    ETEST: .0008529650000000   CTEST: .0657538   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[6]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 55    ETEST: .0019269850000000   CTEST: .0580772   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 56    ETEST: .0015145150000000   CTEST: .0578269   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[3]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 57    ETEST: .0012292900000000   CTEST: .0580464   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 58    ETEST: .0002092100000000   CTEST: .0576561   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[4]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 59    ETEST: .0059139400000000   CTEST: .0496766   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[4]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1
in cycle 60    ETEST: .0028524800000000   CTEST: .0493646   STRTEST: 0
STOP  LAPW0 END
STOP  LAPW1 END
[5]    Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
STOP  LAPW1 END
[8]  - Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[7]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_$loop.def; rm -f .lock_$lockfile[$p] ) >> .time1_$loop
STOP LAPW2 - FERMI; weights written
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
STOP  LAPW2 END
[8]    Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[7]  - Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[6]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[5]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[4]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[3]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[2]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
[1]  + Done                          ( cd $PWD; $t $exe ${def}_${loop}.def $loop; rm -f .lock_$lockfile[$p] ) >> .time2_$loop
STOP  SUMPARA END
STOP  CORE  END
STOP  MIXER END
msrcount 0 msrtest F
ec cc fc and str_conv 0 1 0 1

>   FORCES NOT CONVERGED
Thu 22 Jun 2023 10:54:26 PM CEST> (x) -p dstart
>   (run_lapw) options: -p -ec 0.00001 -i 60
Thu 22 Jun 2023 10:54:32 PM CEST> (x) lapw0 -p
Thu 22 Jun 2023 10:54:45 PM CEST> (x) lapw1 -p -c
Thu 22 Jun 2023 11:02:33 PM CEST> (x) lapw2 -p -c
Thu 22 Jun 2023 11:02:45 PM CEST> (x) sumpara -d
Thu 22 Jun 2023 11:02:48 PM CEST> (x) lcore
Thu 22 Jun 2023 11:02:50 PM CEST> (x) mixer
Thu 22 Jun 2023 11:02:57 PM CEST> (x) lapw0 -p
Thu 22 Jun 2023 11:03:09 PM CEST> (x) lapw1 -p -c
Thu 22 Jun 2023 11:10:51 PM CEST> (x) lapw2 -p -c
Thu 22 Jun 2023 11:11:04 PM CEST> (x) sumpara -d
Thu 22 Jun 2023 11:11:05 PM CEST> (x) lcore
Thu 22 Jun 2023 11:11:07 PM CEST> (x) mixer
Thu 22 Jun 2023 11:11:12 PM CEST> (x) lapw0 -p
Thu 22 Jun 2023 11:11:24 PM CEST> (x) lapw1 -p -c
Thu 22 Jun 2023 11:19:05 PM CEST> (x) lapw2 -p -c
Thu 22 Jun 2023 11:19:19 PM CEST> (x) sumpara -d
Thu 22 Jun 2023 11:19:21 PM CEST> (x) lcore
Thu 22 Jun 2023 11:19:22 PM CEST> (x) mixer
Thu 22 Jun 2023 11:19:26 PM CEST> (x) lapw0 -p
Thu 22 Jun 2023 11:19:38 PM CEST> (x) lapw1 -p -c
Thu 22 Jun 2023 11:27:18 PM CEST> (x) lapw2 -p -c
Thu 22 Jun 2023 11:27:30 PM CEST> (x) sumpara -d
Thu 22 Jun 2023 11:27:32 PM CEST> (x) lcore
Thu 22 Jun 2023 11:27:34 PM CEST> (x) mixer
Thu 22 Jun 2023 11:27:38 PM CEST> (x) lapw0 -p
Thu 22 Jun 2023 11:27:51 PM CEST> (x) lapw1 -p -c
Thu 22 Jun 2023 11:35:31 PM CEST> (x) lapw2 -p -c
Thu 22 Jun 2023 11:35:45 PM CEST> (x) sumpara -d
Thu 22 Jun 2023 11:35:47 PM CEST> (x) lcore
Thu 22 Jun 2023 11:35:49 PM CEST> (x) mixer
Thu 22 Jun 2023 11:35:53 PM CEST> (x) lapw0 -p
Thu 22 Jun 2023 11:36:05 PM CEST> (x) lapw1 -p -c
Thu 22 Jun 2023 11:43:44 PM CEST> (x) lapw2 -p -c
Thu 22 Jun 2023 11:43:55 PM CEST> (x) sumpara -d
Thu 22 Jun 2023 11:43:57 PM CEST> (x) lcore
Thu 22 Jun 2023 11:43:59 PM CEST> (x) mixer
Thu 22 Jun 2023 11:44:04 PM CEST> (x) lapw0 -p
Thu 22 Jun 2023 11:44:17 PM CEST> (x) lapw1 -p -c
Thu 22 Jun 2023 11:52:03 PM CEST> (x) lapw2 -p -c
Thu 22 Jun 2023 11:52:16 PM CEST> (x) sumpara -d
Thu 22 Jun 2023 11:52:18 PM CEST> (x) lcore
Thu 22 Jun 2023 11:52:20 PM CEST> (x) mixer
Thu 22 Jun 2023 11:52:25 PM CEST> (x) lapw0 -p
Thu 22 Jun 2023 11:52:37 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 12:00:19 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 12:00:31 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 12:00:32 AM CEST> (x) lcore
Fri 23 Jun 2023 12:00:34 AM CEST> (x) mixer
Fri 23 Jun 2023 12:00:39 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 12:00:50 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 12:08:33 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 12:08:48 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 12:08:50 AM CEST> (x) lcore
Fri 23 Jun 2023 12:08:53 AM CEST> (x) mixer
Fri 23 Jun 2023 12:08:58 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 12:09:10 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 12:16:55 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 12:17:07 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 12:17:09 AM CEST> (x) lcore
Fri 23 Jun 2023 12:17:11 AM CEST> (x) mixer
Fri 23 Jun 2023 12:17:15 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 12:17:28 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 12:25:12 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 12:25:26 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 12:25:27 AM CEST> (x) lcore
Fri 23 Jun 2023 12:25:29 AM CEST> (x) mixer
Fri 23 Jun 2023 12:25:34 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 12:25:46 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 12:33:32 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 12:33:46 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 12:33:48 AM CEST> (x) lcore
Fri 23 Jun 2023 12:33:50 AM CEST> (x) mixer
Fri 23 Jun 2023 12:33:55 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 12:34:07 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 12:41:52 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 12:42:06 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 12:42:09 AM CEST> (x) lcore
Fri 23 Jun 2023 12:42:10 AM CEST> (x) mixer
Fri 23 Jun 2023 12:42:16 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 12:42:28 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 12:50:13 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 12:50:28 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 12:50:30 AM CEST> (x) lcore
Fri 23 Jun 2023 12:50:31 AM CEST> (x) mixer
Fri 23 Jun 2023 12:50:36 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 12:50:48 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 12:58:28 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 12:58:42 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 12:58:44 AM CEST> (x) lcore
Fri 23 Jun 2023 12:58:45 AM CEST> (x) mixer
Fri 23 Jun 2023 12:58:50 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 12:59:02 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 01:06:48 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 01:07:02 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 01:07:04 AM CEST> (x) lcore
Fri 23 Jun 2023 01:07:06 AM CEST> (x) mixer
Fri 23 Jun 2023 01:07:10 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 01:07:22 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 01:15:08 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 01:15:19 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 01:15:21 AM CEST> (x) lcore
Fri 23 Jun 2023 01:15:24 AM CEST> (x) mixer
Fri 23 Jun 2023 01:15:28 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 01:15:40 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 01:23:20 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 01:23:35 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 01:23:36 AM CEST> (x) lcore
Fri 23 Jun 2023 01:23:38 AM CEST> (x) mixer
Fri 23 Jun 2023 01:23:43 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 01:23:55 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 01:31:36 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 01:31:50 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 01:31:51 AM CEST> (x) lcore
Fri 23 Jun 2023 01:31:53 AM CEST> (x) mixer
Fri 23 Jun 2023 01:31:58 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 01:32:11 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 01:39:56 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 01:40:10 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 01:40:11 AM CEST> (x) lcore
Fri 23 Jun 2023 01:40:13 AM CEST> (x) mixer
Fri 23 Jun 2023 01:40:18 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 01:40:31 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 01:48:14 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 01:48:26 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 01:48:28 AM CEST> (x) lcore
Fri 23 Jun 2023 01:48:30 AM CEST> (x) mixer
Fri 23 Jun 2023 01:48:35 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 01:48:47 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 01:56:30 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 01:56:46 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 01:56:48 AM CEST> (x) lcore
Fri 23 Jun 2023 01:56:50 AM CEST> (x) mixer
Fri 23 Jun 2023 01:56:55 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 01:57:07 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 02:04:47 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 02:05:00 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 02:05:01 AM CEST> (x) lcore
Fri 23 Jun 2023 02:05:03 AM CEST> (x) mixer
Fri 23 Jun 2023 02:05:08 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 02:05:21 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 02:13:02 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 02:13:18 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 02:13:20 AM CEST> (x) lcore
Fri 23 Jun 2023 02:13:22 AM CEST> (x) mixer
Fri 23 Jun 2023 02:13:26 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 02:13:38 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 02:21:24 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 02:21:38 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 02:21:40 AM CEST> (x) lcore
Fri 23 Jun 2023 02:21:42 AM CEST> (x) mixer
Fri 23 Jun 2023 02:21:47 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 02:22:00 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 02:29:47 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 02:30:02 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 02:30:04 AM CEST> (x) lcore
Fri 23 Jun 2023 02:30:06 AM CEST> (x) mixer
Fri 23 Jun 2023 02:30:11 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 02:30:23 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 02:38:05 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 02:38:19 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 02:38:21 AM CEST> (x) lcore
Fri 23 Jun 2023 02:38:24 AM CEST> (x) mixer
Fri 23 Jun 2023 02:38:29 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 02:38:41 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 02:46:23 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 02:46:37 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 02:46:39 AM CEST> (x) lcore
Fri 23 Jun 2023 02:46:41 AM CEST> (x) mixer
Fri 23 Jun 2023 02:46:46 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 02:46:59 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 02:54:42 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 02:54:56 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 02:54:58 AM CEST> (x) lcore
Fri 23 Jun 2023 02:55:00 AM CEST> (x) mixer
Fri 23 Jun 2023 02:55:06 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 02:55:19 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 03:03:02 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 03:03:17 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 03:03:19 AM CEST> (x) lcore
Fri 23 Jun 2023 03:03:20 AM CEST> (x) mixer
Fri 23 Jun 2023 03:03:25 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 03:03:38 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 03:11:21 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 03:11:34 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 03:11:36 AM CEST> (x) lcore
Fri 23 Jun 2023 03:11:38 AM CEST> (x) mixer
Fri 23 Jun 2023 03:11:42 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 03:11:55 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 03:19:31 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 03:19:46 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 03:19:48 AM CEST> (x) lcore
Fri 23 Jun 2023 03:19:49 AM CEST> (x) mixer
Fri 23 Jun 2023 03:19:54 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 03:20:07 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 03:27:53 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 03:28:08 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 03:28:09 AM CEST> (x) lcore
Fri 23 Jun 2023 03:28:11 AM CEST> (x) mixer
Fri 23 Jun 2023 03:28:16 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 03:28:29 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 03:36:16 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 03:36:29 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 03:36:32 AM CEST> (x) lcore
Fri 23 Jun 2023 03:36:33 AM CEST> (x) mixer
Fri 23 Jun 2023 03:36:39 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 03:36:51 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 03:44:30 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 03:44:43 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 03:44:45 AM CEST> (x) lcore
Fri 23 Jun 2023 03:44:47 AM CEST> (x) mixer
Fri 23 Jun 2023 03:44:51 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 03:45:03 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 03:52:49 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 03:53:03 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 03:53:04 AM CEST> (x) lcore
Fri 23 Jun 2023 03:53:06 AM CEST> (x) mixer
Fri 23 Jun 2023 03:53:11 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 03:53:23 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 04:01:09 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 04:01:23 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 04:01:25 AM CEST> (x) lcore
Fri 23 Jun 2023 04:01:27 AM CEST> (x) mixer
Fri 23 Jun 2023 04:01:32 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 04:01:44 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 04:09:25 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 04:09:38 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 04:09:39 AM CEST> (x) lcore
Fri 23 Jun 2023 04:09:41 AM CEST> (x) mixer
Fri 23 Jun 2023 04:09:47 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 04:09:59 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 04:17:40 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 04:17:53 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 04:17:54 AM CEST> (x) lcore
Fri 23 Jun 2023 04:17:56 AM CEST> (x) mixer
Fri 23 Jun 2023 04:18:01 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 04:18:15 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 04:25:55 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 04:26:08 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 04:26:10 AM CEST> (x) lcore
Fri 23 Jun 2023 04:26:12 AM CEST> (x) mixer
Fri 23 Jun 2023 04:26:16 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 04:26:29 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 04:34:13 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 04:34:26 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 04:34:27 AM CEST> (x) lcore
Fri 23 Jun 2023 04:34:29 AM CEST> (x) mixer
Fri 23 Jun 2023 04:34:33 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 04:34:46 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 04:42:25 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 04:42:40 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 04:42:42 AM CEST> (x) lcore
Fri 23 Jun 2023 04:42:44 AM CEST> (x) mixer
Fri 23 Jun 2023 04:42:49 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 04:43:01 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 04:50:45 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 04:50:58 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 04:51:00 AM CEST> (x) lcore
Fri 23 Jun 2023 04:51:02 AM CEST> (x) mixer
Fri 23 Jun 2023 04:51:07 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 04:51:20 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 04:59:02 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 04:59:15 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 04:59:16 AM CEST> (x) lcore
Fri 23 Jun 2023 04:59:18 AM CEST> (x) mixer
Fri 23 Jun 2023 04:59:23 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 04:59:36 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 05:07:19 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 05:07:31 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 05:07:33 AM CEST> (x) lcore
Fri 23 Jun 2023 05:07:35 AM CEST> (x) mixer
Fri 23 Jun 2023 05:07:40 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 05:07:53 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 05:15:37 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 05:15:50 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 05:15:52 AM CEST> (x) lcore
Fri 23 Jun 2023 05:15:53 AM CEST> (x) mixer
Fri 23 Jun 2023 05:15:58 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 05:16:10 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 05:23:51 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 05:24:02 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 05:24:04 AM CEST> (x) lcore
Fri 23 Jun 2023 05:24:05 AM CEST> (x) mixer
Fri 23 Jun 2023 05:24:10 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 05:24:22 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 05:32:01 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 05:32:14 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 05:32:16 AM CEST> (x) lcore
Fri 23 Jun 2023 05:32:18 AM CEST> (x) mixer
Fri 23 Jun 2023 05:32:22 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 05:32:35 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 05:40:18 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 05:40:32 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 05:40:33 AM CEST> (x) lcore
Fri 23 Jun 2023 05:40:35 AM CEST> (x) mixer
Fri 23 Jun 2023 05:40:39 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 05:40:51 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 05:48:34 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 05:48:47 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 05:48:49 AM CEST> (x) lcore
Fri 23 Jun 2023 05:48:50 AM CEST> (x) mixer
Fri 23 Jun 2023 05:48:55 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 05:49:07 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 05:56:48 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 05:57:01 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 05:57:02 AM CEST> (x) lcore
Fri 23 Jun 2023 05:57:05 AM CEST> (x) mixer
Fri 23 Jun 2023 05:57:09 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 05:57:22 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 06:05:01 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 06:05:13 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 06:05:15 AM CEST> (x) lcore
Fri 23 Jun 2023 06:05:17 AM CEST> (x) mixer
Fri 23 Jun 2023 06:05:22 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 06:05:35 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 06:13:16 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 06:13:28 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 06:13:30 AM CEST> (x) lcore
Fri 23 Jun 2023 06:13:31 AM CEST> (x) mixer
Fri 23 Jun 2023 06:13:36 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 06:13:48 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 06:21:35 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 06:21:48 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 06:21:49 AM CEST> (x) lcore
Fri 23 Jun 2023 06:21:52 AM CEST> (x) mixer
Fri 23 Jun 2023 06:21:57 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 06:22:09 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 06:29:48 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 06:30:02 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 06:30:03 AM CEST> (x) lcore
Fri 23 Jun 2023 06:30:05 AM CEST> (x) mixer
Fri 23 Jun 2023 06:30:09 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 06:30:22 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 06:38:02 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 06:38:16 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 06:38:18 AM CEST> (x) lcore
Fri 23 Jun 2023 06:38:19 AM CEST> (x) mixer
Fri 23 Jun 2023 06:38:24 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 06:38:36 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 06:46:14 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 06:46:29 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 06:46:30 AM CEST> (x) lcore
Fri 23 Jun 2023 06:46:32 AM CEST> (x) mixer
Fri 23 Jun 2023 06:46:37 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 06:46:49 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 06:54:30 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 06:54:43 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 06:54:45 AM CEST> (x) lcore
Fri 23 Jun 2023 06:54:47 AM CEST> (x) mixer
Fri 23 Jun 2023 06:54:53 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 06:55:05 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 07:02:48 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 07:03:01 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 07:03:02 AM CEST> (x) lcore
Fri 23 Jun 2023 07:03:04 AM CEST> (x) mixer
Fri 23 Jun 2023 07:03:09 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 07:03:21 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 07:11:06 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 07:11:19 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 07:11:21 AM CEST> (x) lcore
Fri 23 Jun 2023 07:11:23 AM CEST> (x) mixer
>   (run_lapw) options: -p -ec 0.00001 -i 60 -min
Fri 23 Jun 2023 07:11:29 AM CEST> (x) pairhess
Fri 23 Jun 2023 07:12:33 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 07:12:46 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 07:20:29 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 07:20:47 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 07:20:49 AM CEST> (x) lcore
Fri 23 Jun 2023 07:20:50 AM CEST> (x) mixer
Fri 23 Jun 2023 07:20:58 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 07:21:11 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 07:28:55 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 07:29:12 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 07:29:13 AM CEST> (x) lcore
Fri 23 Jun 2023 07:29:15 AM CEST> (x) mixer
Fri 23 Jun 2023 07:29:22 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 07:29:34 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 07:37:14 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 07:37:33 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 07:37:35 AM CEST> (x) lcore
Fri 23 Jun 2023 07:37:37 AM CEST> (x) mixer
Fri 23 Jun 2023 07:37:42 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 07:37:54 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 07:45:35 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 07:45:53 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 07:45:54 AM CEST> (x) lcore
Fri 23 Jun 2023 07:45:56 AM CEST> (x) mixer
Fri 23 Jun 2023 07:46:01 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 07:46:13 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 07:53:52 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 07:54:11 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 07:54:13 AM CEST> (x) lcore
Fri 23 Jun 2023 07:54:16 AM CEST> (x) mixer
Fri 23 Jun 2023 07:54:21 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 07:54:34 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 08:02:18 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 08:02:36 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 08:02:37 AM CEST> (x) lcore
Fri 23 Jun 2023 08:02:39 AM CEST> (x) mixer
Fri 23 Jun 2023 08:02:46 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 08:02:58 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 08:10:40 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 08:10:58 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 08:11:00 AM CEST> (x) lcore
Fri 23 Jun 2023 08:11:01 AM CEST> (x) mixer
Fri 23 Jun 2023 08:11:07 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 08:11:20 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 08:19:01 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 08:19:19 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 08:19:21 AM CEST> (x) lcore
Fri 23 Jun 2023 08:19:23 AM CEST> (x) mixer
Fri 23 Jun 2023 08:19:29 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 08:19:42 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 08:27:29 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 08:27:50 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 08:27:52 AM CEST> (x) lcore
Fri 23 Jun 2023 08:27:54 AM CEST> (x) mixer
Fri 23 Jun 2023 08:28:03 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 08:28:17 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 08:35:59 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 08:36:18 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 08:36:20 AM CEST> (x) lcore
Fri 23 Jun 2023 08:36:23 AM CEST> (x) mixer
Fri 23 Jun 2023 08:36:29 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 08:36:42 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 08:44:23 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 08:44:41 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 08:44:42 AM CEST> (x) lcore
Fri 23 Jun 2023 08:44:44 AM CEST> (x) mixer
Fri 23 Jun 2023 08:44:49 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 08:45:02 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 08:52:42 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 08:52:59 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 08:53:01 AM CEST> (x) lcore
Fri 23 Jun 2023 08:53:03 AM CEST> (x) mixer
Fri 23 Jun 2023 08:53:09 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 08:53:21 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 09:01:04 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 09:01:20 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 09:01:22 AM CEST> (x) lcore
Fri 23 Jun 2023 09:01:23 AM CEST> (x) mixer
Fri 23 Jun 2023 09:01:29 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 09:01:41 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 09:09:24 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 09:09:43 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 09:09:44 AM CEST> (x) lcore
Fri 23 Jun 2023 09:09:46 AM CEST> (x) mixer
Fri 23 Jun 2023 09:09:51 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 09:10:04 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 09:17:46 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 09:18:03 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 09:18:04 AM CEST> (x) lcore
Fri 23 Jun 2023 09:18:06 AM CEST> (x) mixer
Fri 23 Jun 2023 09:18:11 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 09:18:23 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 09:26:05 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 09:26:22 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 09:26:23 AM CEST> (x) lcore
Fri 23 Jun 2023 09:26:25 AM CEST> (x) mixer
Fri 23 Jun 2023 09:26:31 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 09:26:44 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 09:34:27 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 09:34:44 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 09:34:45 AM CEST> (x) lcore
Fri 23 Jun 2023 09:34:47 AM CEST> (x) mixer
Fri 23 Jun 2023 09:34:52 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 09:35:05 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 09:42:46 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 09:43:03 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 09:43:04 AM CEST> (x) lcore
Fri 23 Jun 2023 09:43:05 AM CEST> (x) mixer
Fri 23 Jun 2023 09:43:10 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 09:43:23 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 09:51:07 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 09:51:23 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 09:51:24 AM CEST> (x) lcore
Fri 23 Jun 2023 09:51:26 AM CEST> (x) mixer
Fri 23 Jun 2023 09:51:32 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 09:51:44 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 09:59:26 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 09:59:45 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 09:59:47 AM CEST> (x) lcore
Fri 23 Jun 2023 09:59:49 AM CEST> (x) mixer
Fri 23 Jun 2023 09:59:54 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 10:00:07 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 10:07:48 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 10:08:05 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 10:08:07 AM CEST> (x) lcore
Fri 23 Jun 2023 10:08:09 AM CEST> (x) mixer
Fri 23 Jun 2023 10:08:15 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 10:08:27 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 10:16:09 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 10:16:26 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 10:16:28 AM CEST> (x) lcore
Fri 23 Jun 2023 10:16:31 AM CEST> (x) mixer
Fri 23 Jun 2023 10:16:37 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 10:16:49 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 10:24:34 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 10:24:52 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 10:24:53 AM CEST> (x) lcore
Fri 23 Jun 2023 10:24:55 AM CEST> (x) mixer
Fri 23 Jun 2023 10:25:00 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 10:25:12 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 10:32:51 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 10:33:06 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 10:33:08 AM CEST> (x) lcore
Fri 23 Jun 2023 10:33:10 AM CEST> (x) mixer
Fri 23 Jun 2023 10:33:16 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 10:33:28 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 10:41:12 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 10:41:30 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 10:41:32 AM CEST> (x) lcore
Fri 23 Jun 2023 10:41:34 AM CEST> (x) mixer
Fri 23 Jun 2023 10:41:39 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 10:41:51 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 10:49:32 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 10:49:50 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 10:49:51 AM CEST> (x) lcore
Fri 23 Jun 2023 10:49:53 AM CEST> (x) mixer
Fri 23 Jun 2023 10:49:58 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 10:50:12 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 10:57:53 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 10:58:11 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 10:58:13 AM CEST> (x) lcore
Fri 23 Jun 2023 10:58:14 AM CEST> (x) mixer
Fri 23 Jun 2023 10:58:20 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 10:58:32 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 11:06:13 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 11:06:30 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 11:06:32 AM CEST> (x) lcore
Fri 23 Jun 2023 11:06:33 AM CEST> (x) mixer
Fri 23 Jun 2023 11:06:38 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 11:06:50 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 11:14:32 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 11:14:50 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 11:14:52 AM CEST> (x) lcore
Fri 23 Jun 2023 11:14:54 AM CEST> (x) mixer
Fri 23 Jun 2023 11:15:00 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 11:15:12 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 11:22:53 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 11:23:09 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 11:23:12 AM CEST> (x) lcore
Fri 23 Jun 2023 11:23:14 AM CEST> (x) mixer
Fri 23 Jun 2023 11:23:19 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 11:23:31 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 11:31:11 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 11:31:29 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 11:31:31 AM CEST> (x) lcore
Fri 23 Jun 2023 11:31:33 AM CEST> (x) mixer
Fri 23 Jun 2023 11:31:38 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 11:31:50 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 11:39:32 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 11:39:50 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 11:39:53 AM CEST> (x) lcore
Fri 23 Jun 2023 11:39:54 AM CEST> (x) mixer
Fri 23 Jun 2023 11:40:00 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 11:40:13 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 11:47:52 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 11:48:10 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 11:48:12 AM CEST> (x) lcore
Fri 23 Jun 2023 11:48:14 AM CEST> (x) mixer
Fri 23 Jun 2023 11:48:21 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 11:48:33 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 11:56:10 AM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 11:56:30 AM CEST> (x) sumpara -d
Fri 23 Jun 2023 11:56:32 AM CEST> (x) lcore
Fri 23 Jun 2023 11:56:34 AM CEST> (x) mixer
Fri 23 Jun 2023 11:56:40 AM CEST> (x) lapw0 -p
Fri 23 Jun 2023 11:56:53 AM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 12:04:29 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 12:04:50 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 12:04:52 PM CEST> (x) lcore
Fri 23 Jun 2023 12:04:54 PM CEST> (x) mixer
Fri 23 Jun 2023 12:05:00 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 12:05:12 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 12:12:46 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 12:13:04 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 12:13:06 PM CEST> (x) lcore
Fri 23 Jun 2023 12:13:08 PM CEST> (x) mixer
Fri 23 Jun 2023 12:13:15 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 12:13:27 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 12:21:04 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 12:21:24 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 12:21:25 PM CEST> (x) lcore
Fri 23 Jun 2023 12:21:27 PM CEST> (x) mixer
Fri 23 Jun 2023 12:21:34 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 12:21:47 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 12:29:22 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 12:29:38 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 12:29:40 PM CEST> (x) lcore
Fri 23 Jun 2023 12:29:41 PM CEST> (x) mixer
Fri 23 Jun 2023 12:29:48 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 12:30:00 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 12:37:29 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 12:37:46 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 12:37:48 PM CEST> (x) lcore
Fri 23 Jun 2023 12:37:50 PM CEST> (x) mixer
Fri 23 Jun 2023 12:37:56 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 12:38:09 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 12:45:43 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 12:45:58 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 12:46:00 PM CEST> (x) lcore
Fri 23 Jun 2023 12:46:01 PM CEST> (x) mixer
Fri 23 Jun 2023 12:46:07 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 12:46:22 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 12:53:52 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 12:54:09 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 12:54:12 PM CEST> (x) lcore
Fri 23 Jun 2023 12:54:18 PM CEST> (x) mixer
Fri 23 Jun 2023 12:54:26 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 12:54:38 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 01:02:17 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 01:02:35 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 01:02:37 PM CEST> (x) lcore
Fri 23 Jun 2023 01:02:39 PM CEST> (x) mixer
Fri 23 Jun 2023 01:02:45 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 01:02:58 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 01:10:34 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 01:10:53 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 01:10:55 PM CEST> (x) lcore
Fri 23 Jun 2023 01:10:58 PM CEST> (x) mixer
Fri 23 Jun 2023 01:11:04 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 01:11:17 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 01:18:53 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 01:19:11 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 01:19:13 PM CEST> (x) lcore
Fri 23 Jun 2023 01:19:15 PM CEST> (x) mixer
Fri 23 Jun 2023 01:19:22 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 01:19:34 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 01:27:06 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 01:27:25 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 01:27:27 PM CEST> (x) lcore
Fri 23 Jun 2023 01:27:29 PM CEST> (x) mixer
Fri 23 Jun 2023 01:27:35 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 01:27:48 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 01:35:22 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 01:35:42 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 01:35:44 PM CEST> (x) lcore
Fri 23 Jun 2023 01:35:46 PM CEST> (x) mixer
Fri 23 Jun 2023 01:35:52 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 01:36:04 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 01:43:39 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 01:43:57 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 01:43:59 PM CEST> (x) lcore
Fri 23 Jun 2023 01:44:01 PM CEST> (x) mixer
Fri 23 Jun 2023 01:44:07 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 01:44:20 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 01:51:57 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 01:52:15 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 01:52:17 PM CEST> (x) lcore
Fri 23 Jun 2023 01:52:19 PM CEST> (x) mixer
Fri 23 Jun 2023 01:52:25 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 01:52:38 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 02:00:15 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 02:00:35 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 02:00:36 PM CEST> (x) lcore
Fri 23 Jun 2023 02:00:38 PM CEST> (x) mixer
Fri 23 Jun 2023 02:00:44 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 02:00:57 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 02:08:39 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 02:08:57 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 02:08:59 PM CEST> (x) lcore
Fri 23 Jun 2023 02:09:01 PM CEST> (x) mixer
Fri 23 Jun 2023 02:09:06 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 02:09:20 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 02:16:56 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 02:17:14 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 02:17:16 PM CEST> (x) lcore
Fri 23 Jun 2023 02:17:18 PM CEST> (x) mixer
Fri 23 Jun 2023 02:17:24 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 02:17:37 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 02:25:16 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 02:25:34 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 02:25:36 PM CEST> (x) lcore
Fri 23 Jun 2023 02:25:37 PM CEST> (x) mixer
Fri 23 Jun 2023 02:25:43 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 02:25:56 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 02:33:39 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 02:33:59 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 02:34:01 PM CEST> (x) lcore
Fri 23 Jun 2023 02:34:03 PM CEST> (x) mixer
Fri 23 Jun 2023 02:34:09 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 02:34:22 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 02:42:01 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 02:42:22 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 02:42:24 PM CEST> (x) lcore
Fri 23 Jun 2023 02:42:25 PM CEST> (x) mixer
Fri 23 Jun 2023 02:42:31 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 02:42:44 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 02:50:26 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 02:50:44 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 02:50:46 PM CEST> (x) lcore
Fri 23 Jun 2023 02:50:48 PM CEST> (x) mixer
Fri 23 Jun 2023 02:50:55 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 02:51:07 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 02:58:43 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 02:59:01 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 02:59:03 PM CEST> (x) lcore
Fri 23 Jun 2023 02:59:04 PM CEST> (x) mixer
Fri 23 Jun 2023 02:59:11 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 02:59:23 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 03:07:01 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 03:07:18 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 03:07:20 PM CEST> (x) lcore
Fri 23 Jun 2023 03:07:21 PM CEST> (x) mixer
Fri 23 Jun 2023 03:07:27 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 03:07:40 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 03:15:15 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 03:15:32 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 03:15:33 PM CEST> (x) lcore
Fri 23 Jun 2023 03:15:35 PM CEST> (x) mixer
Fri 23 Jun 2023 03:15:41 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 03:15:54 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 03:23:29 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 03:23:49 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 03:23:51 PM CEST> (x) lcore
Fri 23 Jun 2023 03:23:53 PM CEST> (x) mixer
Fri 23 Jun 2023 03:23:59 PM CEST> (x) lapw0 -p
Fri 23 Jun 2023 03:24:12 PM CEST> (x) lapw1 -p -c
Fri 23 Jun 2023 03:31:50 PM CEST> (x) lapw2 -p -c
Fri 23 Jun 2023 03:32:08 PM CEST> (x) sumpara -d
Fri 23 Jun 2023 03:32:09 PM CEST> (x) lcore
Fri 23 Jun 2023 03:32:12 PM CEST> (x) mixer

 Finished; check for ':ENE' in outputs. 


 List of files in /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg :
-rw-r--r--. 1 milias ukt   146762 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.dayfile
-rw-r--r--. 1 milias ukt  8013329 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scf
-rw-r--r--. 1 milias ukt 11382432 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd1
-rw-r--r--. 1 milias ukt 33847964 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.clmsum
-rw-r--r--. 1 milias ukt    11743 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.outputm
-rw-r--r--. 1 milias ukt    14382 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scfm
-rw-r--r--. 1 milias ukt     6185 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.struct
-rw-r--r--. 1 milias ukt        0 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/mixer.error
-rw-r--r--. 1 milias ukt     5280 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd2
-rw-r--r--. 1 milias ukt 11382192 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd2058
-rw-r--r--. 1 milias ukt    34270 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/:log
-rw-r--r--. 1 milias ukt        0 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.clmsc
-rw-r--r--. 1 milias ukt     6185 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.struct_old
-rw-r--r--. 1 milias ukt        0 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.tausum_old
-rw-r--r--. 1 milias ukt        0 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vrespsum_old
-rw-r--r--. 1 milias ukt      654 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/mixer.def
-rw-r--r--. 1 milias ukt 33847964 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.clmsum_old
-rw-r--r--. 1 milias ukt        0 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lcore.error
-rw-r--r--. 1 milias ukt   251926 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.clmcor
-rw-r--r--. 1 milias ukt      640 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.corewf
-rw-r--r--. 1 milias ukt   781184 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.lcorepot
-rw-r--r--. 1 milias ukt    54662 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.outputc
-rw-r--r--. 1 milias ukt   296560 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.rsplcore
-rw-r--r--. 1 milias ukt     5840 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scfc
-rw-r--r--. 1 milias ukt        0 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw2.error
-rw-r--r--. 1 milias ukt      489 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lcore.def
-rw-r--r--. 1 milias ukt     2672 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.in1c
-rw-r--r--. 1 milias ukt    18656 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scf2
-rw-r--r--. 1 milias ukt   226761 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/:parallel
-rw-r--r--. 1 milias ukt 31669150 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.clmval
-rw-r--r--. 1 milias ukt    23641 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.outputsum
-rw-r--r--. 1 milias ukt    17516 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scf2p
-rw-r--r--. 1 milias ukt      344 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/sumpara.def
-rw-r--r--. 1 milias ukt        0 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/sumpara.error
-rw-r--r--. 1 milias ukt        0 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw2_6.error
-rw-r--r--. 1 milias ukt        0 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw2_7.error
-rw-r--r--. 1 milias ukt        0 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw2_8.error
-rw-r--r--. 1 milias ukt    74168 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.output2_6
-rw-r--r--. 1 milias ukt    74168 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.output2_7
-rw-r--r--. 1 milias ukt    74168 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.output2_8
-rw-r--r--. 1 milias ukt    17621 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scf2_6
-rw-r--r--. 1 milias ukt    17621 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scf2_7
-rw-r--r--. 1 milias ukt    17621 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scf2_8
-rw-r--r--. 1 milias ukt        0 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw2_1.error
-rw-r--r--. 1 milias ukt        0 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw2_5.error
-rw-r--r--. 1 milias ukt 14445832 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.clmval_6
-rw-r--r--. 1 milias ukt 14445832 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.clmval_7
-rw-r--r--. 1 milias ukt 14445832 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.clmval_8
-rw-r--r--. 1 milias ukt 19471807 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.output2_1
-rw-r--r--. 1 milias ukt    74168 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.output2_5
-rw-r--r--. 1 milias ukt    17621 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scf2_1
-rw-r--r--. 1 milias ukt    17621 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scf2_5
-rw-r--r--. 1 milias ukt        0 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw2_4.error
-rw-r--r--. 1 milias ukt 14445832 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.clmval_1
-rw-r--r--. 1 milias ukt 14445832 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.clmval_4
-rw-r--r--. 1 milias ukt 14445832 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.clmval_5
-rw-r--r--. 1 milias ukt    74168 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.output2_4
-rw-r--r--. 1 milias ukt    17621 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scf2_4
-rw-r--r--. 1 milias ukt        0 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw2_2.error
-rw-r--r--. 1 milias ukt        0 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw2_3.error
-rw-r--r--. 1 milias ukt 14445832 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.clmval_2
-rw-r--r--. 1 milias ukt 14445832 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.clmval_3
-rw-r--r--. 1 milias ukt    74168 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.output2_2
-rw-r--r--. 1 milias ukt    74168 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.output2_3
-rw-r--r--. 1 milias ukt    17621 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scf2_2
-rw-r--r--. 1 milias ukt    17621 Jun 23 15:32 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scf2_3
-rw-r--r--. 1 milias ukt     1328 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw2_8.def
-rw-r--r--. 1 milias ukt     1328 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw2_3.def
-rw-r--r--. 1 milias ukt     1328 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw2_4.def
-rw-r--r--. 1 milias ukt     1328 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw2_5.def
-rw-r--r--. 1 milias ukt     1328 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw2_6.def
-rw-r--r--. 1 milias ukt     1328 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw2_7.def
-rw-r--r--. 1 milias ukt     1328 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw2_1.def
-rw-r--r--. 1 milias ukt     1328 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw2_2.def
-rw-r--r--. 1 milias ukt     4180 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.in2c
-rw-r--r--. 1 milias ukt    10612 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.output2
-rw-r--r--. 1 milias ukt   190109 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.weight
-rw-r--r--. 1 milias ukt    30419 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.weight_1
-rw-r--r--. 1 milias ukt    22931 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.weight_2
-rw-r--r--. 1 milias ukt    22931 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.weight_3
-rw-r--r--. 1 milias ukt    22931 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.weight_4
-rw-r--r--. 1 milias ukt    22931 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.weight_5
-rw-r--r--. 1 milias ukt    22865 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.weight_6
-rw-r--r--. 1 milias ukt    22865 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.weight_7
-rw-r--r--. 1 milias ukt    22733 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.weight_8
-rw-r--r--. 1 milias ukt        0 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.energy
-rw-r--r--. 1 milias ukt     1310 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw2.def
-rw-r--r--. 1 milias ukt        0 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw1.error
-rw-r--r--. 1 milias ukt     7197 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scf1
-rw-r--r--. 1 milias ukt        0 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw1_1.error
-rw-r--r--. 1 milias ukt    21990 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.energy_1
-rw-r--r--. 1 milias ukt 15088448 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.nsh
-rw-r--r--. 1 milias ukt    48644 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.output1_1
-rw-r--r--. 1 milias ukt     7196 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scf1_1
-rw-r--r--. 1 milias ukt 46315664 Jun 23 15:31 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vector_1
-rw-r--r--. 1 milias ukt        0 Jun 23 15:30 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw1_8.error
-rw-r--r--. 1 milias ukt    17378 Jun 23 15:30 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.energy_8
-rw-r--r--. 1 milias ukt    44595 Jun 23 15:30 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.output1_8
-rw-r--r--. 1 milias ukt     7183 Jun 23 15:30 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scf1_8
-rw-r--r--. 1 milias ukt 34577766 Jun 23 15:30 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vector_8
-rw-r--r--. 1 milias ukt        0 Jun 23 15:30 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw1_7.error
-rw-r--r--. 1 milias ukt    17456 Jun 23 15:30 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.energy_7
-rw-r--r--. 1 milias ukt    44623 Jun 23 15:30 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.output1_7
-rw-r--r--. 1 milias ukt     7196 Jun 23 15:30 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scf1_7
-rw-r--r--. 1 milias ukt 34782358 Jun 23 15:30 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vector_7
-rw-r--r--. 1 milias ukt        0 Jun 23 15:30 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw1_3.error
-rw-r--r--. 1 milias ukt        0 Jun 23 15:30 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw1_4.error
-rw-r--r--. 1 milias ukt    17495 Jun 23 15:30 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.energy_3
-rw-r--r--. 1 milias ukt    17495 Jun 23 15:30 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.energy_4
-rw-r--r--. 1 milias ukt    44637 Jun 23 15:30 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.output1_3
-rw-r--r--. 1 milias ukt    44637 Jun 23 15:30 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.output1_4
-rw-r--r--. 1 milias ukt     7196 Jun 23 15:30 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scf1_3
-rw-r--r--. 1 milias ukt     7196 Jun 23 15:30 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scf1_4
-rw-r--r--. 1 milias ukt 34912402 Jun 23 15:30 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vector_3
-rw-r--r--. 1 milias ukt 34886474 Jun 23 15:30 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vector_4
-rw-r--r--. 1 milias ukt        0 Jun 23 15:29 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw1_2.error
-rw-r--r--. 1 milias ukt    17495 Jun 23 15:29 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.energy_2
-rw-r--r--. 1 milias ukt    44637 Jun 23 15:29 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.output1_2
-rw-r--r--. 1 milias ukt     7196 Jun 23 15:29 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scf1_2
-rw-r--r--. 1 milias ukt 34890178 Jun 23 15:29 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vector_2
-rw-r--r--. 1 milias ukt        0 Jun 23 15:29 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw1_6.error
-rw-r--r--. 1 milias ukt    17456 Jun 23 15:29 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.energy_6
-rw-r--r--. 1 milias ukt    44567 Jun 23 15:29 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.output1_6
-rw-r--r--. 1 milias ukt     7196 Jun 23 15:29 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scf1_6
-rw-r--r--. 1 milias ukt 34756462 Jun 23 15:29 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vector_6
-rw-r--r--. 1 milias ukt        0 Jun 23 15:29 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw1_5.error
-rw-r--r--. 1 milias ukt    17495 Jun 23 15:29 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.energy_5
-rw-r--r--. 1 milias ukt    44637 Jun 23 15:29 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.output1_5
-rw-r--r--. 1 milias ukt     7196 Jun 23 15:29 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scf1_5
-rw-r--r--. 1 milias ukt 34867954 Jun 23 15:29 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vector_5
-rw-r--r--. 1 milias ukt      828 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw1_8.def
-rw-r--r--. 1 milias ukt      212 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.klist_8
-rw-r--r--. 1 milias ukt      828 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw1_7.def
-rw-r--r--. 1 milias ukt      212 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.klist_7
-rw-r--r--. 1 milias ukt      828 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw1_5.def
-rw-r--r--. 1 milias ukt      828 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw1_6.def
-rw-r--r--. 1 milias ukt      212 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.klist_5
-rw-r--r--. 1 milias ukt      212 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.klist_6
-rw-r--r--. 1 milias ukt      828 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw1_4.def
-rw-r--r--. 1 milias ukt      212 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.klist_4
-rw-r--r--. 1 milias ukt      828 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw1_3.def
-rw-r--r--. 1 milias ukt      212 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.klist_3
-rw-r--r--. 1 milias ukt      828 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw1_2.def
-rw-r--r--. 1 milias ukt      212 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.klist_2
-rw-r--r--. 1 milias ukt      876 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw1_1.def
-rw-r--r--. 1 milias ukt      268 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.klist_1
-rw-r--r--. 1 milias ukt      864 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw1.def
-rw-r--r--. 1 milias ukt        0 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw0.error
-rw-r--r--. 1 milias ukt   418442 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.output0
-rw-r--r--. 1 milias ukt    23132 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scf0
-rw-r--r--. 1 milias ukt 31418633 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vns
-rw-r--r--. 1 milias ukt   251216 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vsp
-rw-r--r--. 1 milias ukt        0 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vnsdn
-rw-r--r--. 1 milias ukt        0 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vspdn
-rw-r--r--. 1 milias ukt     1917 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/lapw0.def
-rw-r--r--. 1 milias ukt     7200 Jun 23 15:24 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/:parallel_lapw0
-rw-r--r--. 1 milias ukt 31418633 Jun 23 15:23 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vns_old
-rw-r--r--. 1 milias ukt   251216 Jun 23 15:23 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vsp_old
-rw-r--r--. 1 milias ukt 11382192 Jun 23 15:23 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd2057
-rw-r--r--. 1 milias ukt 11382192 Jun 23 15:15 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd2056
-rw-r--r--. 1 milias ukt 11382192 Jun 23 15:07 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd2055
-rw-r--r--. 1 milias ukt 11382192 Jun 23 14:59 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd2054
-rw-r--r--. 1 milias ukt 11382192 Jun 23 14:50 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd2053
-rw-r--r--. 1 milias ukt 11382192 Jun 23 14:42 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd2052
-rw-r--r--. 1 milias ukt 11382192 Jun 23 14:34 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd2051
-rw-r--r--. 1 milias ukt 11382192 Jun 23 14:25 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd2050
-rw-r--r--. 1 milias ukt 11382192 Jun 23 14:17 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd2049
-rw-r--r--. 1 milias ukt 11382192 Jun 23 14:09 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd2048
-rw-r--r--. 1 milias ukt 11382192 Jun 23 14:00 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd2047
-rw-r--r--. 1 milias ukt 11382192 Jun 23 13:52 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd2046
-rw-r--r--. 1 milias ukt 11382192 Jun 23 13:44 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd2045
-rw-r--r--. 1 milias ukt 11382192 Jun 23 13:35 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd2044
-rw-r--r--. 1 milias ukt 11382192 Jun 23 13:27 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd2043
-rw-r--r--. 1 milias ukt 11382192 Jun 23 13:19 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd2042
-rw-r--r--. 1 milias ukt 11382192 Jun 23 13:11 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd2041
-rw-r--r--. 1 milias ukt 11382192 Jun 23 13:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd2040
-rw-r--r--. 1 milias ukt 11382192 Jun 23 12:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.broyd2039
-rw-r--r--. 1 milias ukt    18984 Jun 23 07:11 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.hess
-rw-r--r--. 1 milias ukt      887 Jun 23 07:11 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.inM
-rw-r--r--. 1 milias ukt      887 Jun 23 07:11 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.inM_st
-rw-r--r--. 1 milias ukt    36385 Jun 23 07:11 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.outputpair
-rw-r--r--. 1 milias ukt      194 Jun 23 07:11 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.inpair
-rw-r--r--. 1 milias ukt        0 Jun 23 07:11 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/pairhess.error
-rw-r--r--. 1 milias ukt      258 Jun 23 07:11 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.inm
-rw-r--r--. 1 milias ukt      258 Jun 23 07:11 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.inm_msr1a
-rw-r--r--. 1 milias ukt      297 Jun 23 07:11 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/pairhess.def
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.dmat_1
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.dmat_2
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.dmat_3
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.dmat_4
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.dmat_5
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.dmat_6
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.dmat_7
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.dmat_8
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.dmat
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.scfdm
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.weightdn_7
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.weightdn_8
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.weightdn_5
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.weightdn_6
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.weightdn_3
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.weightdn_4
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/fort.12
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.weightdn_1
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.weightdn_2
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.dmftsym
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.energydn
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.energydn_1
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.energydn_2
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.energydn_3
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.energydn_4
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.energydn_5
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.energydn_6
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.energydn_7
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.energydn_8
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.oubwin
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.qdmft
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.weightdn
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.inso
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.qtl
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.radwf
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.recprlist
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.rotlm
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vector
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vorb
-rw-r--r--. 1 milias ukt        0 Jun 22 23:02 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.weightaver
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vec
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.clmcordn
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.clmdn
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.clmup
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.eecedn
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.eeceup
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.grr
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.in0abp
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.mbjmix
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.r2v
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.r2v2
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.r2v_nonloc
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.rhopw
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.taucor
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.taucordn
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.taudn
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.tausum
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.tauup
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vcoul
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vlapldn
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vorbup
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vrespdn
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vrespsum
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vrespup
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vtaudn
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.vtotal
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/dstart.error
-rw-r--r--. 1 milias ukt 20087969 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.outputd
-rw-r--r--. 1 milias ukt      200 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.in0_std
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.indstart
-rw-r--r--. 1 milias ukt        0 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.test
-rw-r--r--. 1 milias ukt       61 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/:parallel_dstart
-rw-r--r--. 1 milias ukt      474 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/dstart.def
-rw-r--r--. 1 milias ukt       61 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.in0
-rw-r--r--. 1 milias ukt     2835 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.inc
-rw-r--r--. 1 milias ukt    10331 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.kgen
-rw-r--r--. 1 milias ukt     1445 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.klist
-rw-r--r--. 1 milias ukt   310170 Jun 22 22:54 /lustre/ukt/milias/scratch/Wien2k_23.2_job.long.N1.n8.jid3124421/LvO2onQg/LvO2onQg.rsp
